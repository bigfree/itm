type Action {
  _count: ActionCount!
  actionsOnWorkspaces: [ActionsOnWorkspaces!]
  class: String
  code: String
  color: String
  createdAt: DateTime
  description: String
  height: Int
  id: ID!
  name: String!
  radius: Int
  type: ActionType!

  """Variables on action"""
  variables: JSON
  width: Int
}

type ActionAvgAggregate {
  height: Float
  radius: Float
  width: Float
}

type ActionCount {
  actionsOnWorkspaces: Int!
}

type ActionCountAggregate {
  _all: Int!
  class: Int!
  code: Int!
  color: Int!
  createdAt: Int!
  description: Int!
  height: Int!
  id: Int!
  name: Int!
  radius: Int!
  type: Int!
  variables: Int!
  width: Int!
}

input ActionCreateInput {
  actionsOnWorkspaces: ActionsOnWorkspacesCreateNestedManyWithoutActionInput
  class: String
  code: String
  color: String
  createdAt: DateTime
  description: String
  height: Int
  name: String!
  radius: Int
  type: ActionType
  variables: JSON
  width: Int
}

input ActionCreateNestedOneWithoutActionsOnWorkspacesInput {
  connect: ActionWhereUniqueInput
  connectOrCreate: ActionCreateOrConnectWithoutActionsOnWorkspacesInput
  create: ActionCreateWithoutActionsOnWorkspacesInput
}

input ActionCreateOrConnectWithoutActionsOnWorkspacesInput {
  create: ActionCreateWithoutActionsOnWorkspacesInput!
  where: ActionWhereUniqueInput!
}

input ActionCreateWithoutActionsOnWorkspacesInput {
  class: String
  code: String
  color: String
  createdAt: DateTime
  description: String
  height: Int
  name: String!
  radius: Int
  type: ActionType
  variables: JSON
  width: Int
}

type ActionMaxAggregate {
  class: String
  code: String
  color: String
  createdAt: DateTime
  description: String
  height: Int
  id: String
  name: String
  radius: Int
  type: ActionType
  width: Int
}

type ActionMinAggregate {
  class: String
  code: String
  color: String
  createdAt: DateTime
  description: String
  height: Int
  id: String
  name: String
  radius: Int
  type: ActionType
  width: Int
}

input ActionOrderByWithRelationInput {
  actionsOnWorkspaces: ActionsOnWorkspacesOrderByRelationAggregateInput
  class: SortOrderInput
  code: SortOrderInput
  color: SortOrderInput
  createdAt: SortOrderInput
  description: SortOrderInput
  height: SortOrderInput
  id: SortOrder
  name: SortOrder
  radius: SortOrderInput
  type: SortOrder
  variables: SortOrderInput
  width: SortOrderInput
}

input ActionRelationFilter {
  is: ActionWhereInput
  isNot: ActionWhereInput
}

enum ActionScalarFieldEnum {
  class
  code
  color
  createdAt
  description
  height
  id
  name
  radius
  type
  variables
  width
}

type ActionSumAggregate {
  height: Int
  radius: Int
  width: Int
}

enum ActionType {
  CIRCLE
  SQUARE
  TRIANGLE
}

input ActionUpdateInput {
  actionsOnWorkspaces: ActionsOnWorkspacesUpdateManyWithoutActionNestedInput
  class: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  radius: NullableIntFieldUpdateOperationsInput
  type: EnumActionTypeFieldUpdateOperationsInput
  variables: JSON
  width: NullableIntFieldUpdateOperationsInput
}

input ActionUpdateOneRequiredWithoutActionsOnWorkspacesNestedInput {
  connect: ActionWhereUniqueInput
  connectOrCreate: ActionCreateOrConnectWithoutActionsOnWorkspacesInput
  create: ActionCreateWithoutActionsOnWorkspacesInput
  update: ActionUpdateToOneWithWhereWithoutActionsOnWorkspacesInput
  upsert: ActionUpsertWithoutActionsOnWorkspacesInput
}

input ActionUpdateToOneWithWhereWithoutActionsOnWorkspacesInput {
  data: ActionUpdateWithoutActionsOnWorkspacesInput!
  where: ActionWhereInput
}

input ActionUpdateWithoutActionsOnWorkspacesInput {
  class: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  radius: NullableIntFieldUpdateOperationsInput
  type: EnumActionTypeFieldUpdateOperationsInput
  variables: JSON
  width: NullableIntFieldUpdateOperationsInput
}

input ActionUpsertWithoutActionsOnWorkspacesInput {
  create: ActionCreateWithoutActionsOnWorkspacesInput!
  update: ActionUpdateWithoutActionsOnWorkspacesInput!
  where: ActionWhereInput
}

input ActionWhereInput {
  AND: [ActionWhereInput!]
  NOT: [ActionWhereInput!]
  OR: [ActionWhereInput!]
  actionsOnWorkspaces: ActionsOnWorkspacesListRelationFilter
  class: StringNullableFilter
  code: StringNullableFilter
  color: StringNullableFilter
  createdAt: DateTimeNullableFilter
  description: StringNullableFilter
  height: IntNullableFilter
  id: StringFilter
  name: StringFilter
  radius: IntNullableFilter
  type: EnumActionTypeFilter
  variables: JsonNullableFilter
  width: IntNullableFilter
}

input ActionWhereUniqueInput {
  AND: [ActionWhereInput!]
  NOT: [ActionWhereInput!]
  OR: [ActionWhereInput!]
  actionsOnWorkspaces: ActionsOnWorkspacesListRelationFilter
  class: StringNullableFilter
  code: StringNullableFilter
  color: StringNullableFilter
  createdAt: DateTimeNullableFilter
  description: StringNullableFilter
  height: IntNullableFilter
  id: String
  name: String
  radius: IntNullableFilter
  type: EnumActionTypeFilter
  variables: JsonNullableFilter
  width: IntNullableFilter
}

type ActionsOnWorkspaces {
  action: Action!
  actionId: String!
  assignedAt: DateTime
  workspace: Workspace!
  workspaceId: String!
}

input ActionsOnWorkspacesActionIdWorkspaceIdCompoundUniqueInput {
  actionId: String!
  workspaceId: String!
}

type ActionsOnWorkspacesCountAggregate {
  _all: Int!
  actionId: Int!
  assignedAt: Int!
  workspaceId: Int!
}

input ActionsOnWorkspacesCreateManyActionInput {
  assignedAt: DateTime
  workspaceId: String!
}

input ActionsOnWorkspacesCreateManyActionInputEnvelope {
  data: [ActionsOnWorkspacesCreateManyActionInput!]!
  skipDuplicates: Boolean
}

input ActionsOnWorkspacesCreateManyWorkspaceInput {
  actionId: String!
  assignedAt: DateTime
}

input ActionsOnWorkspacesCreateManyWorkspaceInputEnvelope {
  data: [ActionsOnWorkspacesCreateManyWorkspaceInput!]!
  skipDuplicates: Boolean
}

input ActionsOnWorkspacesCreateNestedManyWithoutActionInput {
  connect: [ActionsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [ActionsOnWorkspacesCreateOrConnectWithoutActionInput!]
  create: [ActionsOnWorkspacesCreateWithoutActionInput!]
  createMany: ActionsOnWorkspacesCreateManyActionInputEnvelope
}

input ActionsOnWorkspacesCreateNestedManyWithoutWorkspaceInput {
  connect: [ActionsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [ActionsOnWorkspacesCreateOrConnectWithoutWorkspaceInput!]
  create: [ActionsOnWorkspacesCreateWithoutWorkspaceInput!]
  createMany: ActionsOnWorkspacesCreateManyWorkspaceInputEnvelope
}

input ActionsOnWorkspacesCreateOrConnectWithoutActionInput {
  create: ActionsOnWorkspacesCreateWithoutActionInput!
  where: ActionsOnWorkspacesWhereUniqueInput!
}

input ActionsOnWorkspacesCreateOrConnectWithoutWorkspaceInput {
  create: ActionsOnWorkspacesCreateWithoutWorkspaceInput!
  where: ActionsOnWorkspacesWhereUniqueInput!
}

input ActionsOnWorkspacesCreateWithoutActionInput {
  assignedAt: DateTime
  workspace: WorkspaceCreateNestedOneWithoutActionsOnWorkspacesInput!
}

input ActionsOnWorkspacesCreateWithoutWorkspaceInput {
  action: ActionCreateNestedOneWithoutActionsOnWorkspacesInput!
  assignedAt: DateTime
}

input ActionsOnWorkspacesListRelationFilter {
  every: ActionsOnWorkspacesWhereInput
  none: ActionsOnWorkspacesWhereInput
  some: ActionsOnWorkspacesWhereInput
}

type ActionsOnWorkspacesMaxAggregate {
  actionId: String
  assignedAt: DateTime
  workspaceId: String
}

type ActionsOnWorkspacesMinAggregate {
  actionId: String
  assignedAt: DateTime
  workspaceId: String
}

input ActionsOnWorkspacesOrderByRelationAggregateInput {
  _count: SortOrder
}

input ActionsOnWorkspacesScalarWhereInput {
  AND: [ActionsOnWorkspacesScalarWhereInput!]
  NOT: [ActionsOnWorkspacesScalarWhereInput!]
  OR: [ActionsOnWorkspacesScalarWhereInput!]
  actionId: StringFilter
  assignedAt: DateTimeNullableFilter
  workspaceId: StringFilter
}

input ActionsOnWorkspacesUpdateManyMutationInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ActionsOnWorkspacesUpdateManyWithWhereWithoutActionInput {
  data: ActionsOnWorkspacesUpdateManyMutationInput!
  where: ActionsOnWorkspacesScalarWhereInput!
}

input ActionsOnWorkspacesUpdateManyWithWhereWithoutWorkspaceInput {
  data: ActionsOnWorkspacesUpdateManyMutationInput!
  where: ActionsOnWorkspacesScalarWhereInput!
}

input ActionsOnWorkspacesUpdateManyWithoutActionNestedInput {
  connect: [ActionsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [ActionsOnWorkspacesCreateOrConnectWithoutActionInput!]
  create: [ActionsOnWorkspacesCreateWithoutActionInput!]
  createMany: ActionsOnWorkspacesCreateManyActionInputEnvelope
  delete: [ActionsOnWorkspacesWhereUniqueInput!]
  deleteMany: [ActionsOnWorkspacesScalarWhereInput!]
  disconnect: [ActionsOnWorkspacesWhereUniqueInput!]
  set: [ActionsOnWorkspacesWhereUniqueInput!]
  update: [ActionsOnWorkspacesUpdateWithWhereUniqueWithoutActionInput!]
  updateMany: [ActionsOnWorkspacesUpdateManyWithWhereWithoutActionInput!]
  upsert: [ActionsOnWorkspacesUpsertWithWhereUniqueWithoutActionInput!]
}

input ActionsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput {
  connect: [ActionsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [ActionsOnWorkspacesCreateOrConnectWithoutWorkspaceInput!]
  create: [ActionsOnWorkspacesCreateWithoutWorkspaceInput!]
  createMany: ActionsOnWorkspacesCreateManyWorkspaceInputEnvelope
  delete: [ActionsOnWorkspacesWhereUniqueInput!]
  deleteMany: [ActionsOnWorkspacesScalarWhereInput!]
  disconnect: [ActionsOnWorkspacesWhereUniqueInput!]
  set: [ActionsOnWorkspacesWhereUniqueInput!]
  update: [ActionsOnWorkspacesUpdateWithWhereUniqueWithoutWorkspaceInput!]
  updateMany: [ActionsOnWorkspacesUpdateManyWithWhereWithoutWorkspaceInput!]
  upsert: [ActionsOnWorkspacesUpsertWithWhereUniqueWithoutWorkspaceInput!]
}

input ActionsOnWorkspacesUpdateWithWhereUniqueWithoutActionInput {
  data: ActionsOnWorkspacesUpdateWithoutActionInput!
  where: ActionsOnWorkspacesWhereUniqueInput!
}

input ActionsOnWorkspacesUpdateWithWhereUniqueWithoutWorkspaceInput {
  data: ActionsOnWorkspacesUpdateWithoutWorkspaceInput!
  where: ActionsOnWorkspacesWhereUniqueInput!
}

input ActionsOnWorkspacesUpdateWithoutActionInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
  workspace: WorkspaceUpdateOneRequiredWithoutActionsOnWorkspacesNestedInput
}

input ActionsOnWorkspacesUpdateWithoutWorkspaceInput {
  action: ActionUpdateOneRequiredWithoutActionsOnWorkspacesNestedInput
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ActionsOnWorkspacesUpsertWithWhereUniqueWithoutActionInput {
  create: ActionsOnWorkspacesCreateWithoutActionInput!
  update: ActionsOnWorkspacesUpdateWithoutActionInput!
  where: ActionsOnWorkspacesWhereUniqueInput!
}

input ActionsOnWorkspacesUpsertWithWhereUniqueWithoutWorkspaceInput {
  create: ActionsOnWorkspacesCreateWithoutWorkspaceInput!
  update: ActionsOnWorkspacesUpdateWithoutWorkspaceInput!
  where: ActionsOnWorkspacesWhereUniqueInput!
}

input ActionsOnWorkspacesWhereInput {
  AND: [ActionsOnWorkspacesWhereInput!]
  NOT: [ActionsOnWorkspacesWhereInput!]
  OR: [ActionsOnWorkspacesWhereInput!]
  action: ActionRelationFilter
  actionId: StringFilter
  assignedAt: DateTimeNullableFilter
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

input ActionsOnWorkspacesWhereUniqueInput {
  AND: [ActionsOnWorkspacesWhereInput!]
  NOT: [ActionsOnWorkspacesWhereInput!]
  OR: [ActionsOnWorkspacesWhereInput!]
  action: ActionRelationFilter
  actionId: StringFilter
  actionId_workspaceId: ActionsOnWorkspacesActionIdWorkspaceIdCompoundUniqueInput
  assignedAt: DateTimeNullableFilter
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

type AuditlogCountAggregate {
  _all: Int!
  createdAt: Int!
  data: Int!
  id: Int!
  operation: Int!
  table: Int!
}

type AuditlogMaxAggregate {
  createdAt: DateTime
  id: String
  operation: OperationType
  table: String
}

type AuditlogMinAggregate {
  createdAt: DateTime
  id: String
  operation: OperationType
  table: String
}

type Authorize {
  """JWT Token"""
  accessToken: JWT!

  """JWT Token"""
  refreshToken: JWT!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

input EnumActionTypeFieldUpdateOperationsInput {
  set: ActionType
}

input EnumActionTypeFilter {
  equals: ActionType
  in: [ActionType!]
  not: NestedEnumActionTypeFilter
  notIn: [ActionType!]
}

input EnumLogFromNullableFilter {
  equals: LogFrom
  in: [LogFrom!]
  not: NestedEnumLogFromNullableFilter
  notIn: [LogFrom!]
}

input EnumLogTypeFilter {
  equals: LogType
  in: [LogType!]
  not: NestedEnumLogTypeFilter
  notIn: [LogType!]
}

input EnumThemeColorNullableFilter {
  equals: ThemeColor
  in: [ThemeColor!]
  not: NestedEnumThemeColorNullableFilter
  notIn: [ThemeColor!]
}

input EnumUserRoleNullableListFilter {
  equals: [UserRole!]
  has: UserRole
  hasEvery: [UserRole!]
  hasSome: [UserRole!]
  isEmpty: Boolean
}

input EnumUserTypeFieldUpdateOperationsInput {
  set: UserType
}

input EnumUserTypeFilter {
  equals: UserType
  in: [UserType!]
  not: NestedEnumUserTypeFilter
  notIn: [UserType!]
}

type Flow {
  _count: FlowCount!
  assignedWorkspaces: [FlowsOnWorkspaces!]
  code: String!
  createdAt: DateTime
  data: JSON
  description: String
  edges: JSON
  externalId: String
  id: ID!
  name: String!
  user: User
  userId: String
  versions: [FlowVersion!]
}

type FlowCount {
  assignedWorkspaces: Int!
  versions: Int!
}

type FlowCountAggregate {
  _all: Int!
  code: Int!
  createdAt: Int!
  data: Int!
  description: Int!
  edges: Int!
  externalId: Int!
  id: Int!
  name: Int!
  userId: Int!
}

input FlowCreateInput {
  assignedWorkspaces: FlowsOnWorkspacesCreateNestedManyWithoutFlowInput
  code: String!
  createdAt: DateTime
  data: JSON
  description: String
  edges: JSON
  externalId: String
  name: String!
  user: UserCreateNestedOneWithoutFlowsInput
  versions: FlowVersionCreateNestedManyWithoutFlowInput
}

input FlowCreateManyUserInput {
  code: String!
  createdAt: DateTime
  data: JSON
  description: String
  edges: JSON
  externalId: String
  name: String!
}

input FlowCreateManyUserInputEnvelope {
  data: [FlowCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input FlowCreateNestedManyWithoutUserInput {
  connect: [FlowWhereUniqueInput!]
  connectOrCreate: [FlowCreateOrConnectWithoutUserInput!]
  create: [FlowCreateWithoutUserInput!]
  createMany: FlowCreateManyUserInputEnvelope
}

input FlowCreateNestedOneWithoutAssignedWorkspacesInput {
  connect: FlowWhereUniqueInput
  connectOrCreate: FlowCreateOrConnectWithoutAssignedWorkspacesInput
  create: FlowCreateWithoutAssignedWorkspacesInput
}

input FlowCreateNestedOneWithoutVersionsInput {
  connect: FlowWhereUniqueInput
  connectOrCreate: FlowCreateOrConnectWithoutVersionsInput
  create: FlowCreateWithoutVersionsInput
}

input FlowCreateOrConnectWithoutAssignedWorkspacesInput {
  create: FlowCreateWithoutAssignedWorkspacesInput!
  where: FlowWhereUniqueInput!
}

input FlowCreateOrConnectWithoutUserInput {
  create: FlowCreateWithoutUserInput!
  where: FlowWhereUniqueInput!
}

input FlowCreateOrConnectWithoutVersionsInput {
  create: FlowCreateWithoutVersionsInput!
  where: FlowWhereUniqueInput!
}

input FlowCreateWithoutAssignedWorkspacesInput {
  code: String!
  createdAt: DateTime
  data: JSON
  description: String
  edges: JSON
  externalId: String
  name: String!
  user: UserCreateNestedOneWithoutFlowsInput
  versions: FlowVersionCreateNestedManyWithoutFlowInput
}

input FlowCreateWithoutUserInput {
  assignedWorkspaces: FlowsOnWorkspacesCreateNestedManyWithoutFlowInput
  code: String!
  createdAt: DateTime
  data: JSON
  description: String
  edges: JSON
  externalId: String
  name: String!
  versions: FlowVersionCreateNestedManyWithoutFlowInput
}

input FlowCreateWithoutVersionsInput {
  assignedWorkspaces: FlowsOnWorkspacesCreateNestedManyWithoutFlowInput
  code: String!
  createdAt: DateTime
  data: JSON
  description: String
  edges: JSON
  externalId: String
  name: String!
  user: UserCreateNestedOneWithoutFlowsInput
}

input FlowListRelationFilter {
  every: FlowWhereInput
  none: FlowWhereInput
  some: FlowWhereInput
}

type FlowMaxAggregate {
  code: String
  createdAt: DateTime
  description: String
  externalId: String
  id: String
  name: String
  userId: String
}

type FlowMinAggregate {
  code: String
  createdAt: DateTime
  description: String
  externalId: String
  id: String
  name: String
  userId: String
}

input FlowOrderByRelationAggregateInput {
  _count: SortOrder
}

input FlowOrderByWithRelationInput {
  assignedWorkspaces: FlowsOnWorkspacesOrderByRelationAggregateInput
  code: SortOrder
  createdAt: SortOrderInput
  data: SortOrderInput
  description: SortOrderInput
  edges: SortOrderInput
  externalId: SortOrderInput
  id: SortOrder
  name: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrderInput
  versions: FlowVersionOrderByRelationAggregateInput
}

input FlowRelationFilter {
  is: FlowWhereInput
  isNot: FlowWhereInput
}

enum FlowScalarFieldEnum {
  code
  createdAt
  data
  description
  edges
  externalId
  id
  name
  userId
}

input FlowScalarWhereInput {
  AND: [FlowScalarWhereInput!]
  NOT: [FlowScalarWhereInput!]
  OR: [FlowScalarWhereInput!]
  code: StringFilter
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  description: StringNullableFilter
  edges: JsonNullableFilter
  externalId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  userId: StringNullableFilter
}

input FlowUpdateInput {
  assignedWorkspaces: FlowsOnWorkspacesUpdateManyWithoutFlowNestedInput
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  description: NullableStringFieldUpdateOperationsInput
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutFlowsNestedInput
  versions: FlowVersionUpdateManyWithoutFlowNestedInput
}

input FlowUpdateManyMutationInput {
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  description: NullableStringFieldUpdateOperationsInput
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input FlowUpdateManyWithWhereWithoutUserInput {
  data: FlowUpdateManyMutationInput!
  where: FlowScalarWhereInput!
}

input FlowUpdateManyWithoutUserNestedInput {
  connect: [FlowWhereUniqueInput!]
  connectOrCreate: [FlowCreateOrConnectWithoutUserInput!]
  create: [FlowCreateWithoutUserInput!]
  createMany: FlowCreateManyUserInputEnvelope
  delete: [FlowWhereUniqueInput!]
  deleteMany: [FlowScalarWhereInput!]
  disconnect: [FlowWhereUniqueInput!]
  set: [FlowWhereUniqueInput!]
  update: [FlowUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [FlowUpdateManyWithWhereWithoutUserInput!]
  upsert: [FlowUpsertWithWhereUniqueWithoutUserInput!]
}

input FlowUpdateOneRequiredWithoutAssignedWorkspacesNestedInput {
  connect: FlowWhereUniqueInput
  connectOrCreate: FlowCreateOrConnectWithoutAssignedWorkspacesInput
  create: FlowCreateWithoutAssignedWorkspacesInput
  update: FlowUpdateToOneWithWhereWithoutAssignedWorkspacesInput
  upsert: FlowUpsertWithoutAssignedWorkspacesInput
}

input FlowUpdateOneRequiredWithoutVersionsNestedInput {
  connect: FlowWhereUniqueInput
  connectOrCreate: FlowCreateOrConnectWithoutVersionsInput
  create: FlowCreateWithoutVersionsInput
  update: FlowUpdateToOneWithWhereWithoutVersionsInput
  upsert: FlowUpsertWithoutVersionsInput
}

input FlowUpdateToOneWithWhereWithoutAssignedWorkspacesInput {
  data: FlowUpdateWithoutAssignedWorkspacesInput!
  where: FlowWhereInput
}

input FlowUpdateToOneWithWhereWithoutVersionsInput {
  data: FlowUpdateWithoutVersionsInput!
  where: FlowWhereInput
}

input FlowUpdateWithWhereUniqueWithoutUserInput {
  data: FlowUpdateWithoutUserInput!
  where: FlowWhereUniqueInput!
}

input FlowUpdateWithoutAssignedWorkspacesInput {
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  description: NullableStringFieldUpdateOperationsInput
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutFlowsNestedInput
  versions: FlowVersionUpdateManyWithoutFlowNestedInput
}

input FlowUpdateWithoutUserInput {
  assignedWorkspaces: FlowsOnWorkspacesUpdateManyWithoutFlowNestedInput
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  description: NullableStringFieldUpdateOperationsInput
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  versions: FlowVersionUpdateManyWithoutFlowNestedInput
}

input FlowUpdateWithoutVersionsInput {
  assignedWorkspaces: FlowsOnWorkspacesUpdateManyWithoutFlowNestedInput
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  description: NullableStringFieldUpdateOperationsInput
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutFlowsNestedInput
}

input FlowUpsertWithWhereUniqueWithoutUserInput {
  create: FlowCreateWithoutUserInput!
  update: FlowUpdateWithoutUserInput!
  where: FlowWhereUniqueInput!
}

input FlowUpsertWithoutAssignedWorkspacesInput {
  create: FlowCreateWithoutAssignedWorkspacesInput!
  update: FlowUpdateWithoutAssignedWorkspacesInput!
  where: FlowWhereInput
}

input FlowUpsertWithoutVersionsInput {
  create: FlowCreateWithoutVersionsInput!
  update: FlowUpdateWithoutVersionsInput!
  where: FlowWhereInput
}

type FlowVersion {
  code: String!
  createdAt: DateTime
  data: JSON
  edges: JSON
  externalId: String
  flow: Flow!
  flowId: String!
  id: ID!
  name: String!
  user: User
  userId: String
  version: DateTime
  versionName: String
}

type FlowVersionCountAggregate {
  _all: Int!
  code: Int!
  createdAt: Int!
  data: Int!
  edges: Int!
  externalId: Int!
  flowId: Int!
  id: Int!
  name: Int!
  userId: Int!
  version: Int!
  versionName: Int!
}

input FlowVersionCreateManyFlowInput {
  code: String!
  createdAt: DateTime
  data: JSON
  edges: JSON
  externalId: String
  id: String
  name: String!
  userId: String
  version: DateTime
  versionName: String
}

input FlowVersionCreateManyFlowInputEnvelope {
  data: [FlowVersionCreateManyFlowInput!]!
  skipDuplicates: Boolean
}

input FlowVersionCreateManyUserInput {
  code: String!
  createdAt: DateTime
  data: JSON
  edges: JSON
  externalId: String
  flowId: String!
  id: String
  name: String!
  version: DateTime
  versionName: String
}

input FlowVersionCreateManyUserInputEnvelope {
  data: [FlowVersionCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input FlowVersionCreateNestedManyWithoutFlowInput {
  connect: [FlowVersionWhereUniqueInput!]
  connectOrCreate: [FlowVersionCreateOrConnectWithoutFlowInput!]
  create: [FlowVersionCreateWithoutFlowInput!]
  createMany: FlowVersionCreateManyFlowInputEnvelope
}

input FlowVersionCreateNestedManyWithoutUserInput {
  connect: [FlowVersionWhereUniqueInput!]
  connectOrCreate: [FlowVersionCreateOrConnectWithoutUserInput!]
  create: [FlowVersionCreateWithoutUserInput!]
  createMany: FlowVersionCreateManyUserInputEnvelope
}

input FlowVersionCreateOrConnectWithoutFlowInput {
  create: FlowVersionCreateWithoutFlowInput!
  where: FlowVersionWhereUniqueInput!
}

input FlowVersionCreateOrConnectWithoutUserInput {
  create: FlowVersionCreateWithoutUserInput!
  where: FlowVersionWhereUniqueInput!
}

input FlowVersionCreateWithoutFlowInput {
  code: String!
  createdAt: DateTime
  data: JSON
  edges: JSON
  externalId: String
  id: String
  name: String!
  user: UserCreateNestedOneWithoutFlowsVersionInput
  version: DateTime
  versionName: String
}

input FlowVersionCreateWithoutUserInput {
  code: String!
  createdAt: DateTime
  data: JSON
  edges: JSON
  externalId: String
  flow: FlowCreateNestedOneWithoutVersionsInput!
  id: String
  name: String!
  version: DateTime
  versionName: String
}

input FlowVersionListRelationFilter {
  every: FlowVersionWhereInput
  none: FlowVersionWhereInput
  some: FlowVersionWhereInput
}

type FlowVersionMaxAggregate {
  code: String
  createdAt: DateTime
  externalId: String
  flowId: String
  id: String
  name: String
  userId: String
  version: DateTime
  versionName: String
}

type FlowVersionMinAggregate {
  code: String
  createdAt: DateTime
  externalId: String
  flowId: String
  id: String
  name: String
  userId: String
  version: DateTime
  versionName: String
}

input FlowVersionOrderByRelationAggregateInput {
  _count: SortOrder
}

input FlowVersionOrderByWithRelationInput {
  code: SortOrder
  createdAt: SortOrderInput
  data: SortOrderInput
  edges: SortOrderInput
  externalId: SortOrderInput
  flow: FlowOrderByWithRelationInput
  flowId: SortOrder
  id: SortOrder
  name: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrderInput
  version: SortOrderInput
  versionName: SortOrderInput
}

enum FlowVersionScalarFieldEnum {
  code
  createdAt
  data
  edges
  externalId
  flowId
  id
  name
  userId
  version
  versionName
}

input FlowVersionScalarWhereInput {
  AND: [FlowVersionScalarWhereInput!]
  NOT: [FlowVersionScalarWhereInput!]
  OR: [FlowVersionScalarWhereInput!]
  code: StringFilter
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  edges: JsonNullableFilter
  externalId: StringNullableFilter
  flowId: StringFilter
  id: StringFilter
  name: StringFilter
  userId: StringNullableFilter
  version: DateTimeNullableFilter
  versionName: StringNullableFilter
}

input FlowVersionUniqueVersionCompoundUniqueInput {
  flowId: String!
  userId: String!
  version: DateTime!
}

input FlowVersionUpdateManyMutationInput {
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  version: NullableDateTimeFieldUpdateOperationsInput
  versionName: NullableStringFieldUpdateOperationsInput
}

input FlowVersionUpdateManyWithWhereWithoutFlowInput {
  data: FlowVersionUpdateManyMutationInput!
  where: FlowVersionScalarWhereInput!
}

input FlowVersionUpdateManyWithWhereWithoutUserInput {
  data: FlowVersionUpdateManyMutationInput!
  where: FlowVersionScalarWhereInput!
}

input FlowVersionUpdateManyWithoutFlowNestedInput {
  connect: [FlowVersionWhereUniqueInput!]
  connectOrCreate: [FlowVersionCreateOrConnectWithoutFlowInput!]
  create: [FlowVersionCreateWithoutFlowInput!]
  createMany: FlowVersionCreateManyFlowInputEnvelope
  delete: [FlowVersionWhereUniqueInput!]
  deleteMany: [FlowVersionScalarWhereInput!]
  disconnect: [FlowVersionWhereUniqueInput!]
  set: [FlowVersionWhereUniqueInput!]
  update: [FlowVersionUpdateWithWhereUniqueWithoutFlowInput!]
  updateMany: [FlowVersionUpdateManyWithWhereWithoutFlowInput!]
  upsert: [FlowVersionUpsertWithWhereUniqueWithoutFlowInput!]
}

input FlowVersionUpdateManyWithoutUserNestedInput {
  connect: [FlowVersionWhereUniqueInput!]
  connectOrCreate: [FlowVersionCreateOrConnectWithoutUserInput!]
  create: [FlowVersionCreateWithoutUserInput!]
  createMany: FlowVersionCreateManyUserInputEnvelope
  delete: [FlowVersionWhereUniqueInput!]
  deleteMany: [FlowVersionScalarWhereInput!]
  disconnect: [FlowVersionWhereUniqueInput!]
  set: [FlowVersionWhereUniqueInput!]
  update: [FlowVersionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [FlowVersionUpdateManyWithWhereWithoutUserInput!]
  upsert: [FlowVersionUpsertWithWhereUniqueWithoutUserInput!]
}

input FlowVersionUpdateWithWhereUniqueWithoutFlowInput {
  data: FlowVersionUpdateWithoutFlowInput!
  where: FlowVersionWhereUniqueInput!
}

input FlowVersionUpdateWithWhereUniqueWithoutUserInput {
  data: FlowVersionUpdateWithoutUserInput!
  where: FlowVersionWhereUniqueInput!
}

input FlowVersionUpdateWithoutFlowInput {
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  user: UserUpdateOneWithoutFlowsVersionNestedInput
  version: NullableDateTimeFieldUpdateOperationsInput
  versionName: NullableStringFieldUpdateOperationsInput
}

input FlowVersionUpdateWithoutUserInput {
  code: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: JSON
  edges: JSON
  externalId: NullableStringFieldUpdateOperationsInput
  flow: FlowUpdateOneRequiredWithoutVersionsNestedInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  version: NullableDateTimeFieldUpdateOperationsInput
  versionName: NullableStringFieldUpdateOperationsInput
}

input FlowVersionUpsertWithWhereUniqueWithoutFlowInput {
  create: FlowVersionCreateWithoutFlowInput!
  update: FlowVersionUpdateWithoutFlowInput!
  where: FlowVersionWhereUniqueInput!
}

input FlowVersionUpsertWithWhereUniqueWithoutUserInput {
  create: FlowVersionCreateWithoutUserInput!
  update: FlowVersionUpdateWithoutUserInput!
  where: FlowVersionWhereUniqueInput!
}

input FlowVersionWhereInput {
  AND: [FlowVersionWhereInput!]
  NOT: [FlowVersionWhereInput!]
  OR: [FlowVersionWhereInput!]
  code: StringFilter
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  edges: JsonNullableFilter
  externalId: StringNullableFilter
  flow: FlowRelationFilter
  flowId: StringFilter
  id: StringFilter
  name: StringFilter
  user: UserNullableRelationFilter
  userId: StringNullableFilter
  version: DateTimeNullableFilter
  versionName: StringNullableFilter
}

input FlowVersionWhereUniqueInput {
  AND: [FlowVersionWhereInput!]
  NOT: [FlowVersionWhereInput!]
  OR: [FlowVersionWhereInput!]
  code: StringFilter
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  edges: JsonNullableFilter
  externalId: StringNullableFilter
  flow: FlowRelationFilter
  flowId: StringFilter
  id: String
  name: StringFilter
  uniqueVersion: FlowVersionUniqueVersionCompoundUniqueInput
  user: UserNullableRelationFilter
  userId: StringNullableFilter
  version: DateTimeNullableFilter
  versionName: StringNullableFilter
}

input FlowWhereInput {
  AND: [FlowWhereInput!]
  NOT: [FlowWhereInput!]
  OR: [FlowWhereInput!]
  assignedWorkspaces: FlowsOnWorkspacesListRelationFilter
  code: StringFilter
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  description: StringNullableFilter
  edges: JsonNullableFilter
  externalId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  user: UserNullableRelationFilter
  userId: StringNullableFilter
  versions: FlowVersionListRelationFilter
}

input FlowWhereUniqueInput {
  AND: [FlowWhereInput!]
  NOT: [FlowWhereInput!]
  OR: [FlowWhereInput!]
  assignedWorkspaces: FlowsOnWorkspacesListRelationFilter
  code: String
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  description: StringNullableFilter
  edges: JsonNullableFilter
  externalId: String
  id: String
  name: String
  user: UserNullableRelationFilter
  userId: StringNullableFilter
  versions: FlowVersionListRelationFilter
}

type FlowsOnWorkspaces {
  assignedAt: DateTime
  flow: Flow!
  flowId: String!
  workspace: Workspace!
  workspaceId: String!
}

type FlowsOnWorkspacesCountAggregate {
  _all: Int!
  assignedAt: Int!
  flowId: Int!
  workspaceId: Int!
}

input FlowsOnWorkspacesCreateManyFlowInput {
  assignedAt: DateTime
  workspaceId: String!
}

input FlowsOnWorkspacesCreateManyFlowInputEnvelope {
  data: [FlowsOnWorkspacesCreateManyFlowInput!]!
  skipDuplicates: Boolean
}

input FlowsOnWorkspacesCreateManyWorkspaceInput {
  assignedAt: DateTime
  flowId: String!
}

input FlowsOnWorkspacesCreateManyWorkspaceInputEnvelope {
  data: [FlowsOnWorkspacesCreateManyWorkspaceInput!]!
  skipDuplicates: Boolean
}

input FlowsOnWorkspacesCreateNestedManyWithoutFlowInput {
  connect: [FlowsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [FlowsOnWorkspacesCreateOrConnectWithoutFlowInput!]
  create: [FlowsOnWorkspacesCreateWithoutFlowInput!]
  createMany: FlowsOnWorkspacesCreateManyFlowInputEnvelope
}

input FlowsOnWorkspacesCreateNestedManyWithoutWorkspaceInput {
  connect: [FlowsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [FlowsOnWorkspacesCreateOrConnectWithoutWorkspaceInput!]
  create: [FlowsOnWorkspacesCreateWithoutWorkspaceInput!]
  createMany: FlowsOnWorkspacesCreateManyWorkspaceInputEnvelope
}

input FlowsOnWorkspacesCreateOrConnectWithoutFlowInput {
  create: FlowsOnWorkspacesCreateWithoutFlowInput!
  where: FlowsOnWorkspacesWhereUniqueInput!
}

input FlowsOnWorkspacesCreateOrConnectWithoutWorkspaceInput {
  create: FlowsOnWorkspacesCreateWithoutWorkspaceInput!
  where: FlowsOnWorkspacesWhereUniqueInput!
}

input FlowsOnWorkspacesCreateWithoutFlowInput {
  assignedAt: DateTime
  workspace: WorkspaceCreateNestedOneWithoutAssignedFlowsInput!
}

input FlowsOnWorkspacesCreateWithoutWorkspaceInput {
  assignedAt: DateTime
  flow: FlowCreateNestedOneWithoutAssignedWorkspacesInput!
}

input FlowsOnWorkspacesFlowIdWorkspaceIdCompoundUniqueInput {
  flowId: String!
  workspaceId: String!
}

input FlowsOnWorkspacesListRelationFilter {
  every: FlowsOnWorkspacesWhereInput
  none: FlowsOnWorkspacesWhereInput
  some: FlowsOnWorkspacesWhereInput
}

type FlowsOnWorkspacesMaxAggregate {
  assignedAt: DateTime
  flowId: String
  workspaceId: String
}

type FlowsOnWorkspacesMinAggregate {
  assignedAt: DateTime
  flowId: String
  workspaceId: String
}

input FlowsOnWorkspacesOrderByRelationAggregateInput {
  _count: SortOrder
}

input FlowsOnWorkspacesScalarWhereInput {
  AND: [FlowsOnWorkspacesScalarWhereInput!]
  NOT: [FlowsOnWorkspacesScalarWhereInput!]
  OR: [FlowsOnWorkspacesScalarWhereInput!]
  assignedAt: DateTimeNullableFilter
  flowId: StringFilter
  workspaceId: StringFilter
}

input FlowsOnWorkspacesUpdateManyMutationInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
}

input FlowsOnWorkspacesUpdateManyWithWhereWithoutFlowInput {
  data: FlowsOnWorkspacesUpdateManyMutationInput!
  where: FlowsOnWorkspacesScalarWhereInput!
}

input FlowsOnWorkspacesUpdateManyWithWhereWithoutWorkspaceInput {
  data: FlowsOnWorkspacesUpdateManyMutationInput!
  where: FlowsOnWorkspacesScalarWhereInput!
}

input FlowsOnWorkspacesUpdateManyWithoutFlowNestedInput {
  connect: [FlowsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [FlowsOnWorkspacesCreateOrConnectWithoutFlowInput!]
  create: [FlowsOnWorkspacesCreateWithoutFlowInput!]
  createMany: FlowsOnWorkspacesCreateManyFlowInputEnvelope
  delete: [FlowsOnWorkspacesWhereUniqueInput!]
  deleteMany: [FlowsOnWorkspacesScalarWhereInput!]
  disconnect: [FlowsOnWorkspacesWhereUniqueInput!]
  set: [FlowsOnWorkspacesWhereUniqueInput!]
  update: [FlowsOnWorkspacesUpdateWithWhereUniqueWithoutFlowInput!]
  updateMany: [FlowsOnWorkspacesUpdateManyWithWhereWithoutFlowInput!]
  upsert: [FlowsOnWorkspacesUpsertWithWhereUniqueWithoutFlowInput!]
}

input FlowsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput {
  connect: [FlowsOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [FlowsOnWorkspacesCreateOrConnectWithoutWorkspaceInput!]
  create: [FlowsOnWorkspacesCreateWithoutWorkspaceInput!]
  createMany: FlowsOnWorkspacesCreateManyWorkspaceInputEnvelope
  delete: [FlowsOnWorkspacesWhereUniqueInput!]
  deleteMany: [FlowsOnWorkspacesScalarWhereInput!]
  disconnect: [FlowsOnWorkspacesWhereUniqueInput!]
  set: [FlowsOnWorkspacesWhereUniqueInput!]
  update: [FlowsOnWorkspacesUpdateWithWhereUniqueWithoutWorkspaceInput!]
  updateMany: [FlowsOnWorkspacesUpdateManyWithWhereWithoutWorkspaceInput!]
  upsert: [FlowsOnWorkspacesUpsertWithWhereUniqueWithoutWorkspaceInput!]
}

input FlowsOnWorkspacesUpdateWithWhereUniqueWithoutFlowInput {
  data: FlowsOnWorkspacesUpdateWithoutFlowInput!
  where: FlowsOnWorkspacesWhereUniqueInput!
}

input FlowsOnWorkspacesUpdateWithWhereUniqueWithoutWorkspaceInput {
  data: FlowsOnWorkspacesUpdateWithoutWorkspaceInput!
  where: FlowsOnWorkspacesWhereUniqueInput!
}

input FlowsOnWorkspacesUpdateWithoutFlowInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
  workspace: WorkspaceUpdateOneRequiredWithoutAssignedFlowsNestedInput
}

input FlowsOnWorkspacesUpdateWithoutWorkspaceInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
  flow: FlowUpdateOneRequiredWithoutAssignedWorkspacesNestedInput
}

input FlowsOnWorkspacesUpsertWithWhereUniqueWithoutFlowInput {
  create: FlowsOnWorkspacesCreateWithoutFlowInput!
  update: FlowsOnWorkspacesUpdateWithoutFlowInput!
  where: FlowsOnWorkspacesWhereUniqueInput!
}

input FlowsOnWorkspacesUpsertWithWhereUniqueWithoutWorkspaceInput {
  create: FlowsOnWorkspacesCreateWithoutWorkspaceInput!
  update: FlowsOnWorkspacesUpdateWithoutWorkspaceInput!
  where: FlowsOnWorkspacesWhereUniqueInput!
}

input FlowsOnWorkspacesWhereInput {
  AND: [FlowsOnWorkspacesWhereInput!]
  NOT: [FlowsOnWorkspacesWhereInput!]
  OR: [FlowsOnWorkspacesWhereInput!]
  assignedAt: DateTimeNullableFilter
  flow: FlowRelationFilter
  flowId: StringFilter
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

input FlowsOnWorkspacesWhereUniqueInput {
  AND: [FlowsOnWorkspacesWhereInput!]
  NOT: [FlowsOnWorkspacesWhereInput!]
  OR: [FlowsOnWorkspacesWhereInput!]
  assignedAt: DateTimeNullableFilter
  flow: FlowRelationFilter
  flowId: StringFilter
  flowId_workspaceId: FlowsOnWorkspacesFlowIdWorkspaceIdCompoundUniqueInput
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type Log {
  createdAt: DateTime
  data: JSON
  from: LogFrom
  id: ID!
  type: LogType!
}

type LogCountAggregate {
  _all: Int!
  createdAt: Int!
  data: Int!
  from: Int!
  id: Int!
  type: Int!
}

input LogCreateInput {
  createdAt: DateTime
  data: JSON
  from: LogFrom
  type: LogType
}

enum LogFrom {
  API
  APP
}

type LogMaxAggregate {
  createdAt: DateTime
  from: LogFrom
  id: String
  type: LogType
}

type LogMinAggregate {
  createdAt: DateTime
  from: LogFrom
  id: String
  type: LogType
}

input LogOrderByWithRelationInput {
  createdAt: SortOrderInput
  data: SortOrderInput
  from: SortOrderInput
  id: SortOrder
  type: SortOrder
}

enum LogScalarFieldEnum {
  createdAt
  data
  from
  id
  type
}

enum LogType {
  DEBUG
  ERROR
  LOG
  VERBOSE
  WARN
}

input LogWhereInput {
  AND: [LogWhereInput!]
  NOT: [LogWhereInput!]
  OR: [LogWhereInput!]
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  from: EnumLogFromNullableFilter
  id: StringFilter
  type: EnumLogTypeFilter
}

input LogWhereUniqueInput {
  AND: [LogWhereInput!]
  NOT: [LogWhereInput!]
  OR: [LogWhereInput!]
  createdAt: DateTimeNullableFilter
  data: JsonNullableFilter
  from: EnumLogFromNullableFilter
  id: String
  type: EnumLogTypeFilter
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createAction(data: ActionCreateInput!): Action!
  createFlow(data: FlowCreateInput!): Flow!
  createLog(data: LogCreateInput): Log!
  createMyConfig(userConfigCreateInput: UserConfigCreateInput!): UserConfig!
  createTab(data: TabCreateInput!): Tab!
  createUser(data: UserCreateInput!): User!
  createUserConfig(data: UserConfigCreateInput!): UserConfig!
  createWorkspace(data: WorkspaceCreateInput!): Workspace!
  deleteUser(where: UserWhereUniqueInput!): User!
  login(loginInput: LoginInput!): Authorize!
  logout: User!
  refreshTokens(refreshInput: RefreshInput!): Authorize!
  register(registerInput: RegisterInput!): Authorize!
  removeAction(where: ActionWhereUniqueInput!): Action!
  removeFlow(where: FlowWhereUniqueInput!): Flow!
  removeManyTab(where: TabWhereInput): Tab!
  removeOneTab(where: TabWhereUniqueInput!): Tab!
  removeWorkspace(where: WorkspaceWhereUniqueInput!): Workspace!
  updateAction(data: ActionUpdateInput!, where: ActionWhereUniqueInput!): Action!
  updateFlow(data: FlowUpdateInput!, where: FlowWhereUniqueInput!): Flow!
  updateMyConfig(userConfigUpdateInput: UserConfigUpdateInput!): UserConfig!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  updateUserConfig(data: UserConfigUpdateInput!, where: UserConfigWhereUniqueInput!): UserConfig!
  updateWorkspace(data: WorkspaceUpdateInput!, where: WorkspaceWhereUniqueInput!): Workspace!
  upsertUserConfig(create: UserConfigCreateInput!, update: UserConfigUpdateInput!, where: UserConfigWhereUniqueInput!): UserConfig!
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumActionTypeFilter {
  equals: ActionType
  in: [ActionType!]
  not: NestedEnumActionTypeFilter
  notIn: [ActionType!]
}

input NestedEnumLogFromNullableFilter {
  equals: LogFrom
  in: [LogFrom!]
  not: NestedEnumLogFromNullableFilter
  notIn: [LogFrom!]
}

input NestedEnumLogTypeFilter {
  equals: LogType
  in: [LogType!]
  not: NestedEnumLogTypeFilter
  notIn: [LogType!]
}

input NestedEnumThemeColorNullableFilter {
  equals: ThemeColor
  in: [ThemeColor!]
  not: NestedEnumThemeColorNullableFilter
  notIn: [ThemeColor!]
}

input NestedEnumUserTypeFilter {
  equals: UserType
  in: [UserType!]
  not: NestedEnumUserTypeFilter
  notIn: [UserType!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumThemeColorFieldUpdateOperationsInput {
  set: ThemeColor
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

enum OperationType {
  CREATE
  DELETE
  UPDATE
}

type PasswordCountAggregate {
  _all: Int!
  id: Int!
  password: Int!
}

input PasswordCreateNestedOneWithoutUserInput {
  connect: PasswordWhereUniqueInput
  connectOrCreate: PasswordCreateOrConnectWithoutUserInput
  create: PasswordCreateWithoutUserInput
}

input PasswordCreateOrConnectWithoutUserInput {
  create: PasswordCreateWithoutUserInput!
  where: PasswordWhereUniqueInput!
}

input PasswordCreateWithoutUserInput {
  password: String!
}

type PasswordMaxAggregate {
  id: String
  password: String
}

type PasswordMinAggregate {
  id: String
  password: String
}

input PasswordOrderByWithRelationInput {
  id: SortOrder
  password: SortOrder
  user: UserOrderByWithRelationInput
}

input PasswordUpdateOneRequiredWithoutUserNestedInput {
  connect: PasswordWhereUniqueInput
  connectOrCreate: PasswordCreateOrConnectWithoutUserInput
  create: PasswordCreateWithoutUserInput
  update: PasswordUpdateToOneWithWhereWithoutUserInput
  upsert: PasswordUpsertWithoutUserInput
}

input PasswordUpdateToOneWithWhereWithoutUserInput {
  data: PasswordUpdateWithoutUserInput!
  where: PasswordWhereInput
}

input PasswordUpdateWithoutUserInput {
  password: StringFieldUpdateOperationsInput
}

input PasswordUpsertWithoutUserInput {
  create: PasswordCreateWithoutUserInput!
  update: PasswordUpdateWithoutUserInput!
  where: PasswordWhereInput
}

input PasswordWhereInput {
  AND: [PasswordWhereInput!]
  NOT: [PasswordWhereInput!]
  OR: [PasswordWhereInput!]
  id: StringFilter
  password: StringFilter
  user: UserNullableRelationFilter
}

input PasswordWhereUniqueInput {
  AND: [PasswordWhereInput!]
  NOT: [PasswordWhereInput!]
  OR: [PasswordWhereInput!]
  id: String
  password: StringFilter
  user: UserNullableRelationFilter
}

type Profile {
  acronym: String
  avatar: String
  bio: String
  createdAt: DateTime
  firstName: String!
  id: ID!
  lastName: String!
  user: User!
  userId: String!
  username: String
}

type ProfileCountAggregate {
  _all: Int!
  acronym: Int!
  avatar: Int!
  bio: Int!
  createdAt: Int!
  firstName: Int!
  id: Int!
  lastName: Int!
  userId: Int!
  username: Int!
}

input ProfileCreateNestedOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  acronym: String
  avatar: String
  bio: String
  createdAt: DateTime
  firstName: String!
  lastName: String!
  username: String
}

input ProfileFullnameCompoundUniqueInput {
  firstName: String!
  lastName: String!
}

type ProfileMaxAggregate {
  acronym: String
  avatar: String
  bio: String
  createdAt: DateTime
  firstName: String
  id: String
  lastName: String
  userId: String
  username: String
}

type ProfileMinAggregate {
  acronym: String
  avatar: String
  bio: String
  createdAt: DateTime
  firstName: String
  id: String
  lastName: String
  userId: String
  username: String
}

input ProfileNullableRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

input ProfileOrderByWithRelationInput {
  acronym: SortOrderInput
  avatar: SortOrderInput
  bio: SortOrderInput
  createdAt: SortOrderInput
  firstName: SortOrder
  id: SortOrder
  lastName: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
  username: SortOrderInput
}

input ProfileUpdateOneWithoutUserNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
  delete: ProfileWhereInput
  disconnect: ProfileWhereInput
  update: ProfileUpdateToOneWithWhereWithoutUserInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUpdateToOneWithWhereWithoutUserInput {
  data: ProfileUpdateWithoutUserInput!
  where: ProfileWhereInput
}

input ProfileUpdateWithoutUserInput {
  acronym: NullableStringFieldUpdateOperationsInput
  avatar: NullableStringFieldUpdateOperationsInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input ProfileUpsertWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  update: ProfileUpdateWithoutUserInput!
  where: ProfileWhereInput
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  acronym: StringNullableFilter
  avatar: StringNullableFilter
  bio: StringNullableFilter
  createdAt: DateTimeNullableFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  user: UserRelationFilter
  userId: StringFilter
  username: StringNullableFilter
}

input ProfileWhereUniqueInput {
  AND: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  acronym: StringNullableFilter
  avatar: StringNullableFilter
  bio: StringNullableFilter
  createdAt: DateTimeNullableFilter
  firstName: StringFilter
  fullname: ProfileFullnameCompoundUniqueInput
  id: String
  lastName: StringFilter
  user: UserRelationFilter
  userId: String
  username: String
}

type Query {
  action(where: ActionWhereUniqueInput!): Action!
  actions(cursor: ActionWhereUniqueInput, distinct: [ActionScalarFieldEnum!], orderBy: [ActionOrderByWithRelationInput!], skip: Int, take: Int, where: ActionWhereInput): [Action!]!
  flow(where: FlowWhereUniqueInput!): Flow!
  flowVersion(where: FlowVersionWhereUniqueInput!): FlowVersion!
  flowVersions(cursor: FlowVersionWhereUniqueInput, distinct: [FlowVersionScalarFieldEnum!], orderBy: [FlowVersionOrderByWithRelationInput!], skip: Int, take: Int, where: FlowVersionWhereInput): [FlowVersion!]!
  flows(cursor: FlowWhereUniqueInput, distinct: [FlowScalarFieldEnum!], orderBy: [FlowOrderByWithRelationInput!], skip: Int, take: Int, where: FlowWhereInput): [Flow!]!
  log(where: LogWhereUniqueInput!): Log!
  logs(cursor: LogWhereUniqueInput, distinct: [LogScalarFieldEnum!], orderBy: [LogOrderByWithRelationInput!], skip: Int, take: Int, where: LogWhereInput): [Log!]!
  me: User!
  myConfig: UserConfig!
  tabs(cursor: TabWhereUniqueInput, distinct: [TabScalarFieldEnum!], orderBy: [TabOrderByWithRelationInput!], skip: Int, take: Int, where: TabWhereInput): [Tab!]!
  user(where: UserWhereUniqueInput!): User!
  userConfig(where: UserConfigWhereUniqueInput!): UserConfig!
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
  workspace(where: WorkspaceWhereUniqueInput!): Workspace!
  workspaces(cursor: WorkspaceWhereUniqueInput, distinct: [WorkspaceScalarFieldEnum!], orderBy: [WorkspaceOrderByWithRelationInput!], skip: Int, take: Int, where: WorkspaceWhereInput): [Workspace!]!
}

enum QueryMode {
  default
  insensitive
}

input RefreshInput {
  """Refresh token"""
  refreshToken: String!
}

type RefreshTokenCountAggregate {
  _all: Int!
  expiresAt: Int!
  id: Int!
  isRevoked: Int!
  userId: Int!
}

type RefreshTokenMaxAggregate {
  expiresAt: DateTime
  id: String
  isRevoked: Boolean
  userId: String
}

type RefreshTokenMinAggregate {
  expiresAt: DateTime
  id: String
  isRevoked: Boolean
  userId: String
}

input RegisterInput {
  """User unique email address"""
  email: String!

  """User password"""
  password: String!
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  flowCreated: Flow!
  flowDeleted: Flow!
  flowUpdated: Flow!
  logCreated: Log!
  userCreated: User!
  userDeleted: User!
  userLogout: User!
  userUpdated: User!
  workspaceCreated: User!
  workspaceDeleted: User!
  workspaceUpdated: User!
}

type Tab {
  data: JSON
  id: ID!
  user: User!
  userId: String!
}

type TabCountAggregate {
  _all: Int!
  data: Int!
  id: Int!
  userId: Int!
}

input TabCreateInput {
  data: JSON
  user: UserCreateNestedOneWithoutTabsInput!
}

input TabCreateManyUserInput {
  data: JSON
}

input TabCreateManyUserInputEnvelope {
  data: [TabCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input TabCreateNestedManyWithoutUserInput {
  connect: [TabWhereUniqueInput!]
  connectOrCreate: [TabCreateOrConnectWithoutUserInput!]
  create: [TabCreateWithoutUserInput!]
  createMany: TabCreateManyUserInputEnvelope
}

input TabCreateOrConnectWithoutUserInput {
  create: TabCreateWithoutUserInput!
  where: TabWhereUniqueInput!
}

input TabCreateWithoutUserInput {
  data: JSON
}

input TabListRelationFilter {
  every: TabWhereInput
  none: TabWhereInput
  some: TabWhereInput
}

type TabMaxAggregate {
  id: String
  userId: String
}

type TabMinAggregate {
  id: String
  userId: String
}

input TabOrderByRelationAggregateInput {
  _count: SortOrder
}

input TabOrderByWithRelationInput {
  data: SortOrderInput
  id: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

enum TabScalarFieldEnum {
  data
  id
  userId
}

input TabScalarWhereInput {
  AND: [TabScalarWhereInput!]
  NOT: [TabScalarWhereInput!]
  OR: [TabScalarWhereInput!]
  data: JsonNullableFilter
  id: StringFilter
  userId: StringFilter
}

input TabUpdateManyMutationInput {
  data: JSON
  id: StringFieldUpdateOperationsInput
}

input TabUpdateManyWithWhereWithoutUserInput {
  data: TabUpdateManyMutationInput!
  where: TabScalarWhereInput!
}

input TabUpdateManyWithoutUserNestedInput {
  connect: [TabWhereUniqueInput!]
  connectOrCreate: [TabCreateOrConnectWithoutUserInput!]
  create: [TabCreateWithoutUserInput!]
  createMany: TabCreateManyUserInputEnvelope
  delete: [TabWhereUniqueInput!]
  deleteMany: [TabScalarWhereInput!]
  disconnect: [TabWhereUniqueInput!]
  set: [TabWhereUniqueInput!]
  update: [TabUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [TabUpdateManyWithWhereWithoutUserInput!]
  upsert: [TabUpsertWithWhereUniqueWithoutUserInput!]
}

input TabUpdateWithWhereUniqueWithoutUserInput {
  data: TabUpdateWithoutUserInput!
  where: TabWhereUniqueInput!
}

input TabUpdateWithoutUserInput {
  data: JSON
  id: StringFieldUpdateOperationsInput
}

input TabUpsertWithWhereUniqueWithoutUserInput {
  create: TabCreateWithoutUserInput!
  update: TabUpdateWithoutUserInput!
  where: TabWhereUniqueInput!
}

input TabWhereInput {
  AND: [TabWhereInput!]
  NOT: [TabWhereInput!]
  OR: [TabWhereInput!]
  data: JsonNullableFilter
  id: StringFilter
  user: UserRelationFilter
  userId: StringFilter
}

input TabWhereUniqueInput {
  AND: [TabWhereInput!]
  NOT: [TabWhereInput!]
  OR: [TabWhereInput!]
  data: JsonNullableFilter
  id: String
  user: UserRelationFilter
  userId: StringFilter
}

enum ThemeColor {
  AUTO
  DARK
  LIGHT
}

type User {
  _count: UserCount!
  assignedWorkspaces: [UsersOnWorkspaces!]
  config: UserConfig
  createdAt: DateTime
  createdWorkspaces: [Workspace!]
  email: EmailAddress!
  flows: [Flow!]
  flowsVersion: [FlowVersion!]
  id: ID!
  pairId: String
  profile: Profile
  role: [UserRole!]
  tabs: [Tab!]
  type: UserType!
}

type UserConfig {
  activeWorkspace: Workspace
  activeWorkspaceId: String
  id: ID!
  theme: ThemeColor
  user: User!
  userId: String!
}

type UserConfigCountAggregate {
  _all: Int!
  activeWorkspaceId: Int!
  id: Int!
  theme: Int!
  userId: Int!
}

input UserConfigCreateInput {
  activeWorkspace: WorkspaceCreateNestedOneWithoutActiveOnUserInput
  theme: ThemeColor
  user: UserCreateNestedOneWithoutConfigInput!
}

input UserConfigCreateManyActiveWorkspaceInput {
  theme: ThemeColor
  userId: String!
}

input UserConfigCreateManyActiveWorkspaceInputEnvelope {
  data: [UserConfigCreateManyActiveWorkspaceInput!]!
  skipDuplicates: Boolean
}

input UserConfigCreateNestedManyWithoutActiveWorkspaceInput {
  connect: [UserConfigWhereUniqueInput!]
  connectOrCreate: [UserConfigCreateOrConnectWithoutActiveWorkspaceInput!]
  create: [UserConfigCreateWithoutActiveWorkspaceInput!]
  createMany: UserConfigCreateManyActiveWorkspaceInputEnvelope
}

input UserConfigCreateNestedOneWithoutUserInput {
  connect: UserConfigWhereUniqueInput
  connectOrCreate: UserConfigCreateOrConnectWithoutUserInput
  create: UserConfigCreateWithoutUserInput
}

input UserConfigCreateOrConnectWithoutActiveWorkspaceInput {
  create: UserConfigCreateWithoutActiveWorkspaceInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigCreateOrConnectWithoutUserInput {
  create: UserConfigCreateWithoutUserInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigCreateWithoutActiveWorkspaceInput {
  theme: ThemeColor
  user: UserCreateNestedOneWithoutConfigInput!
}

input UserConfigCreateWithoutUserInput {
  activeWorkspace: WorkspaceCreateNestedOneWithoutActiveOnUserInput
  theme: ThemeColor
}

input UserConfigListRelationFilter {
  every: UserConfigWhereInput
  none: UserConfigWhereInput
  some: UserConfigWhereInput
}

type UserConfigMaxAggregate {
  activeWorkspaceId: String
  id: String
  theme: ThemeColor
  userId: String
}

type UserConfigMinAggregate {
  activeWorkspaceId: String
  id: String
  theme: ThemeColor
  userId: String
}

input UserConfigNullableRelationFilter {
  is: UserConfigWhereInput
  isNot: UserConfigWhereInput
}

input UserConfigOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserConfigOrderByWithRelationInput {
  activeWorkspace: WorkspaceOrderByWithRelationInput
  activeWorkspaceId: SortOrderInput
  id: SortOrder
  theme: SortOrderInput
  user: UserOrderByWithRelationInput
  userId: SortOrder
}

input UserConfigScalarWhereInput {
  AND: [UserConfigScalarWhereInput!]
  NOT: [UserConfigScalarWhereInput!]
  OR: [UserConfigScalarWhereInput!]
  activeWorkspaceId: StringNullableFilter
  id: StringFilter
  theme: EnumThemeColorNullableFilter
  userId: StringFilter
}

input UserConfigUpdateInput {
  activeWorkspace: WorkspaceUpdateOneWithoutActiveOnUserNestedInput
  theme: NullableEnumThemeColorFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutConfigNestedInput
}

input UserConfigUpdateManyMutationInput {
  theme: NullableEnumThemeColorFieldUpdateOperationsInput
}

input UserConfigUpdateManyWithWhereWithoutActiveWorkspaceInput {
  data: UserConfigUpdateManyMutationInput!
  where: UserConfigScalarWhereInput!
}

input UserConfigUpdateManyWithoutActiveWorkspaceNestedInput {
  connect: [UserConfigWhereUniqueInput!]
  connectOrCreate: [UserConfigCreateOrConnectWithoutActiveWorkspaceInput!]
  create: [UserConfigCreateWithoutActiveWorkspaceInput!]
  createMany: UserConfigCreateManyActiveWorkspaceInputEnvelope
  delete: [UserConfigWhereUniqueInput!]
  deleteMany: [UserConfigScalarWhereInput!]
  disconnect: [UserConfigWhereUniqueInput!]
  set: [UserConfigWhereUniqueInput!]
  update: [UserConfigUpdateWithWhereUniqueWithoutActiveWorkspaceInput!]
  updateMany: [UserConfigUpdateManyWithWhereWithoutActiveWorkspaceInput!]
  upsert: [UserConfigUpsertWithWhereUniqueWithoutActiveWorkspaceInput!]
}

input UserConfigUpdateOneWithoutUserNestedInput {
  connect: UserConfigWhereUniqueInput
  connectOrCreate: UserConfigCreateOrConnectWithoutUserInput
  create: UserConfigCreateWithoutUserInput
  delete: UserConfigWhereInput
  disconnect: UserConfigWhereInput
  update: UserConfigUpdateToOneWithWhereWithoutUserInput
  upsert: UserConfigUpsertWithoutUserInput
}

input UserConfigUpdateToOneWithWhereWithoutUserInput {
  data: UserConfigUpdateWithoutUserInput!
  where: UserConfigWhereInput
}

input UserConfigUpdateWithWhereUniqueWithoutActiveWorkspaceInput {
  data: UserConfigUpdateWithoutActiveWorkspaceInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigUpdateWithoutActiveWorkspaceInput {
  theme: NullableEnumThemeColorFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutConfigNestedInput
}

input UserConfigUpdateWithoutUserInput {
  activeWorkspace: WorkspaceUpdateOneWithoutActiveOnUserNestedInput
  theme: NullableEnumThemeColorFieldUpdateOperationsInput
}

input UserConfigUpsertWithWhereUniqueWithoutActiveWorkspaceInput {
  create: UserConfigCreateWithoutActiveWorkspaceInput!
  update: UserConfigUpdateWithoutActiveWorkspaceInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigUpsertWithoutUserInput {
  create: UserConfigCreateWithoutUserInput!
  update: UserConfigUpdateWithoutUserInput!
  where: UserConfigWhereInput
}

input UserConfigWhereInput {
  AND: [UserConfigWhereInput!]
  NOT: [UserConfigWhereInput!]
  OR: [UserConfigWhereInput!]
  activeWorkspace: WorkspaceNullableRelationFilter
  activeWorkspaceId: StringNullableFilter
  id: StringFilter
  theme: EnumThemeColorNullableFilter
  user: UserRelationFilter
  userId: StringFilter
}

input UserConfigWhereUniqueInput {
  AND: [UserConfigWhereInput!]
  NOT: [UserConfigWhereInput!]
  OR: [UserConfigWhereInput!]
  activeWorkspace: WorkspaceNullableRelationFilter
  activeWorkspaceId: StringNullableFilter
  id: String
  theme: EnumThemeColorNullableFilter
  user: UserRelationFilter
  userId: String
}

type UserCount {
  assignedWorkspaces: Int!
  createdWorkspaces: Int!
  flows: Int!
  flowsVersion: Int!
  refreshTokens: Int!
  tabs: Int!
}

type UserCountAggregate {
  _all: Int!
  createdAt: Int!
  email: Int!
  id: Int!
  pairId: Int!
  role: Int!
  type: Int!
}

input UserCreateInput {
  assignedWorkspaces: UsersOnWorkspacesCreateNestedManyWithoutUserInput
  config: UserConfigCreateNestedOneWithoutUserInput
  createdAt: DateTime
  createdWorkspaces: WorkspaceCreateNestedManyWithoutCreatedByInput
  email: EmailAddress!
  flows: FlowCreateNestedManyWithoutUserInput
  flowsVersion: FlowVersionCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  tabs: TabCreateNestedManyWithoutUserInput
  type: UserType
}

input UserCreateNestedOneWithoutAssignedWorkspacesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAssignedWorkspacesInput
  create: UserCreateWithoutAssignedWorkspacesInput
}

input UserCreateNestedOneWithoutConfigInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutConfigInput
  create: UserCreateWithoutConfigInput
}

input UserCreateNestedOneWithoutCreatedWorkspacesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedWorkspacesInput
  create: UserCreateWithoutCreatedWorkspacesInput
}

input UserCreateNestedOneWithoutFlowsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFlowsInput
  create: UserCreateWithoutFlowsInput
}

input UserCreateNestedOneWithoutFlowsVersionInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFlowsVersionInput
  create: UserCreateWithoutFlowsVersionInput
}

input UserCreateNestedOneWithoutTabsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTabsInput
  create: UserCreateWithoutTabsInput
}

input UserCreateOrConnectWithoutAssignedWorkspacesInput {
  create: UserCreateWithoutAssignedWorkspacesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutConfigInput {
  create: UserCreateWithoutConfigInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCreatedWorkspacesInput {
  create: UserCreateWithoutCreatedWorkspacesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFlowsInput {
  create: UserCreateWithoutFlowsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFlowsVersionInput {
  create: UserCreateWithoutFlowsVersionInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTabsInput {
  create: UserCreateWithoutTabsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutAssignedWorkspacesInput {
  config: UserConfigCreateNestedOneWithoutUserInput
  createdAt: DateTime
  createdWorkspaces: WorkspaceCreateNestedManyWithoutCreatedByInput
  email: EmailAddress!
  flows: FlowCreateNestedManyWithoutUserInput
  flowsVersion: FlowVersionCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  tabs: TabCreateNestedManyWithoutUserInput
  type: UserType
}

input UserCreateWithoutConfigInput {
  assignedWorkspaces: UsersOnWorkspacesCreateNestedManyWithoutUserInput
  createdAt: DateTime
  createdWorkspaces: WorkspaceCreateNestedManyWithoutCreatedByInput
  email: EmailAddress!
  flows: FlowCreateNestedManyWithoutUserInput
  flowsVersion: FlowVersionCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  tabs: TabCreateNestedManyWithoutUserInput
  type: UserType
}

input UserCreateWithoutCreatedWorkspacesInput {
  assignedWorkspaces: UsersOnWorkspacesCreateNestedManyWithoutUserInput
  config: UserConfigCreateNestedOneWithoutUserInput
  createdAt: DateTime
  email: EmailAddress!
  flows: FlowCreateNestedManyWithoutUserInput
  flowsVersion: FlowVersionCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  tabs: TabCreateNestedManyWithoutUserInput
  type: UserType
}

input UserCreateWithoutFlowsInput {
  assignedWorkspaces: UsersOnWorkspacesCreateNestedManyWithoutUserInput
  config: UserConfigCreateNestedOneWithoutUserInput
  createdAt: DateTime
  createdWorkspaces: WorkspaceCreateNestedManyWithoutCreatedByInput
  email: EmailAddress!
  flowsVersion: FlowVersionCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  tabs: TabCreateNestedManyWithoutUserInput
  type: UserType
}

input UserCreateWithoutFlowsVersionInput {
  assignedWorkspaces: UsersOnWorkspacesCreateNestedManyWithoutUserInput
  config: UserConfigCreateNestedOneWithoutUserInput
  createdAt: DateTime
  createdWorkspaces: WorkspaceCreateNestedManyWithoutCreatedByInput
  email: EmailAddress!
  flows: FlowCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  tabs: TabCreateNestedManyWithoutUserInput
  type: UserType
}

input UserCreateWithoutTabsInput {
  assignedWorkspaces: UsersOnWorkspacesCreateNestedManyWithoutUserInput
  config: UserConfigCreateNestedOneWithoutUserInput
  createdAt: DateTime
  createdWorkspaces: WorkspaceCreateNestedManyWithoutCreatedByInput
  email: EmailAddress!
  flows: FlowCreateNestedManyWithoutUserInput
  flowsVersion: FlowVersionCreateNestedManyWithoutUserInput
  password: PasswordCreateNestedOneWithoutUserInput!
  profile: ProfileCreateNestedOneWithoutUserInput
  role: UserCreateroleInput
  type: UserType
}

input UserCreateroleInput {
  set: [UserRole!]!
}

type UserMaxAggregate {
  createdAt: DateTime
  email: EmailAddress
  id: String
  pairId: String
  type: UserType
}

type UserMinAggregate {
  createdAt: DateTime
  email: EmailAddress
  id: String
  pairId: String
  type: UserType
}

input UserNullableRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserOrderByWithRelationInput {
  assignedWorkspaces: UsersOnWorkspacesOrderByRelationAggregateInput
  config: UserConfigOrderByWithRelationInput
  createdAt: SortOrderInput
  createdWorkspaces: WorkspaceOrderByRelationAggregateInput
  email: SortOrder
  flows: FlowOrderByRelationAggregateInput
  flowsVersion: FlowVersionOrderByRelationAggregateInput
  id: SortOrder
  pairId: SortOrderInput
  password: PasswordOrderByWithRelationInput
  passwordId: SortOrder
  profile: ProfileOrderByWithRelationInput
  role: SortOrder
  tabs: TabOrderByRelationAggregateInput
  type: SortOrder
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserRole {
  ROLE_ADMIN
  ROLE_DEVELOPER
  ROLE_GUEST
  ROLE_USER
}

enum UserScalarFieldEnum {
  createdAt
  email
  id
  pairId
  passwordId
  role
  type
}

enum UserType {
  ADMIN
  GUEST
  USER
}

input UserUpdateInput {
  assignedWorkspaces: UsersOnWorkspacesUpdateManyWithoutUserNestedInput
  config: UserConfigUpdateOneWithoutUserNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdWorkspaces: WorkspaceUpdateManyWithoutCreatedByNestedInput
  email: StringFieldUpdateOperationsInput
  flows: FlowUpdateManyWithoutUserNestedInput
  flowsVersion: FlowVersionUpdateManyWithoutUserNestedInput
  password: PasswordUpdateOneRequiredWithoutUserNestedInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: UserUpdateroleInput
  tabs: TabUpdateManyWithoutUserNestedInput
  type: EnumUserTypeFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutAssignedWorkspacesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAssignedWorkspacesInput
  create: UserCreateWithoutAssignedWorkspacesInput
  update: UserUpdateToOneWithWhereWithoutAssignedWorkspacesInput
  upsert: UserUpsertWithoutAssignedWorkspacesInput
}

input UserUpdateOneRequiredWithoutConfigNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutConfigInput
  create: UserCreateWithoutConfigInput
  update: UserUpdateToOneWithWhereWithoutConfigInput
  upsert: UserUpsertWithoutConfigInput
}

input UserUpdateOneRequiredWithoutCreatedWorkspacesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedWorkspacesInput
  create: UserCreateWithoutCreatedWorkspacesInput
  update: UserUpdateToOneWithWhereWithoutCreatedWorkspacesInput
  upsert: UserUpsertWithoutCreatedWorkspacesInput
}

input UserUpdateOneWithoutFlowsNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFlowsInput
  create: UserCreateWithoutFlowsInput
  delete: UserWhereInput
  disconnect: UserWhereInput
  update: UserUpdateToOneWithWhereWithoutFlowsInput
  upsert: UserUpsertWithoutFlowsInput
}

input UserUpdateOneWithoutFlowsVersionNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFlowsVersionInput
  create: UserCreateWithoutFlowsVersionInput
  delete: UserWhereInput
  disconnect: UserWhereInput
  update: UserUpdateToOneWithWhereWithoutFlowsVersionInput
  upsert: UserUpsertWithoutFlowsVersionInput
}

input UserUpdateToOneWithWhereWithoutAssignedWorkspacesInput {
  data: UserUpdateWithoutAssignedWorkspacesInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutConfigInput {
  data: UserUpdateWithoutConfigInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutCreatedWorkspacesInput {
  data: UserUpdateWithoutCreatedWorkspacesInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutFlowsInput {
  data: UserUpdateWithoutFlowsInput!
  where: UserWhereInput
}

input UserUpdateToOneWithWhereWithoutFlowsVersionInput {
  data: UserUpdateWithoutFlowsVersionInput!
  where: UserWhereInput
}

input UserUpdateWithoutAssignedWorkspacesInput {
  config: UserConfigUpdateOneWithoutUserNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdWorkspaces: WorkspaceUpdateManyWithoutCreatedByNestedInput
  email: StringFieldUpdateOperationsInput
  flows: FlowUpdateManyWithoutUserNestedInput
  flowsVersion: FlowVersionUpdateManyWithoutUserNestedInput
  password: PasswordUpdateOneRequiredWithoutUserNestedInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: UserUpdateroleInput
  tabs: TabUpdateManyWithoutUserNestedInput
  type: EnumUserTypeFieldUpdateOperationsInput
}

input UserUpdateWithoutConfigInput {
  assignedWorkspaces: UsersOnWorkspacesUpdateManyWithoutUserNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdWorkspaces: WorkspaceUpdateManyWithoutCreatedByNestedInput
  email: StringFieldUpdateOperationsInput
  flows: FlowUpdateManyWithoutUserNestedInput
  flowsVersion: FlowVersionUpdateManyWithoutUserNestedInput
  password: PasswordUpdateOneRequiredWithoutUserNestedInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: UserUpdateroleInput
  tabs: TabUpdateManyWithoutUserNestedInput
  type: EnumUserTypeFieldUpdateOperationsInput
}

input UserUpdateWithoutCreatedWorkspacesInput {
  assignedWorkspaces: UsersOnWorkspacesUpdateManyWithoutUserNestedInput
  config: UserConfigUpdateOneWithoutUserNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  flows: FlowUpdateManyWithoutUserNestedInput
  flowsVersion: FlowVersionUpdateManyWithoutUserNestedInput
  password: PasswordUpdateOneRequiredWithoutUserNestedInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: UserUpdateroleInput
  tabs: TabUpdateManyWithoutUserNestedInput
  type: EnumUserTypeFieldUpdateOperationsInput
}

input UserUpdateWithoutFlowsInput {
  assignedWorkspaces: UsersOnWorkspacesUpdateManyWithoutUserNestedInput
  config: UserConfigUpdateOneWithoutUserNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdWorkspaces: WorkspaceUpdateManyWithoutCreatedByNestedInput
  email: StringFieldUpdateOperationsInput
  flowsVersion: FlowVersionUpdateManyWithoutUserNestedInput
  password: PasswordUpdateOneRequiredWithoutUserNestedInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: UserUpdateroleInput
  tabs: TabUpdateManyWithoutUserNestedInput
  type: EnumUserTypeFieldUpdateOperationsInput
}

input UserUpdateWithoutFlowsVersionInput {
  assignedWorkspaces: UsersOnWorkspacesUpdateManyWithoutUserNestedInput
  config: UserConfigUpdateOneWithoutUserNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdWorkspaces: WorkspaceUpdateManyWithoutCreatedByNestedInput
  email: StringFieldUpdateOperationsInput
  flows: FlowUpdateManyWithoutUserNestedInput
  password: PasswordUpdateOneRequiredWithoutUserNestedInput
  profile: ProfileUpdateOneWithoutUserNestedInput
  role: UserUpdateroleInput
  tabs: TabUpdateManyWithoutUserNestedInput
  type: EnumUserTypeFieldUpdateOperationsInput
}

input UserUpdateroleInput {
  push: [UserRole!]
  set: [UserRole!]
}

input UserUpsertWithoutAssignedWorkspacesInput {
  create: UserCreateWithoutAssignedWorkspacesInput!
  update: UserUpdateWithoutAssignedWorkspacesInput!
  where: UserWhereInput
}

input UserUpsertWithoutConfigInput {
  create: UserCreateWithoutConfigInput!
  update: UserUpdateWithoutConfigInput!
  where: UserWhereInput
}

input UserUpsertWithoutCreatedWorkspacesInput {
  create: UserCreateWithoutCreatedWorkspacesInput!
  update: UserUpdateWithoutCreatedWorkspacesInput!
  where: UserWhereInput
}

input UserUpsertWithoutFlowsInput {
  create: UserCreateWithoutFlowsInput!
  update: UserUpdateWithoutFlowsInput!
  where: UserWhereInput
}

input UserUpsertWithoutFlowsVersionInput {
  create: UserCreateWithoutFlowsVersionInput!
  update: UserUpdateWithoutFlowsVersionInput!
  where: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  assignedWorkspaces: UsersOnWorkspacesListRelationFilter
  config: UserConfigNullableRelationFilter
  createdAt: DateTimeNullableFilter
  createdWorkspaces: WorkspaceListRelationFilter
  email: StringFilter
  flows: FlowListRelationFilter
  flowsVersion: FlowVersionListRelationFilter
  id: StringFilter
  pairId: StringNullableFilter
  profile: ProfileNullableRelationFilter
  role: EnumUserRoleNullableListFilter
  tabs: TabListRelationFilter
  type: EnumUserTypeFilter
}

input UserWhereUniqueInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  assignedWorkspaces: UsersOnWorkspacesListRelationFilter
  config: UserConfigNullableRelationFilter
  createdAt: DateTimeNullableFilter
  createdWorkspaces: WorkspaceListRelationFilter
  email: EmailAddress
  flows: FlowListRelationFilter
  flowsVersion: FlowVersionListRelationFilter
  id: String
  pairId: StringNullableFilter
  profile: ProfileNullableRelationFilter
  role: EnumUserRoleNullableListFilter
  tabs: TabListRelationFilter
  type: EnumUserTypeFilter
}

type UsersOnWorkspaces {
  assignedAt: DateTime
  user: User!
  userId: String!
  workspace: Workspace!
  workspaceId: String!
}

type UsersOnWorkspacesCountAggregate {
  _all: Int!
  assignedAt: Int!
  userId: Int!
  workspaceId: Int!
}

input UsersOnWorkspacesCreateManyUserInput {
  assignedAt: DateTime
  workspaceId: String!
}

input UsersOnWorkspacesCreateManyUserInputEnvelope {
  data: [UsersOnWorkspacesCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UsersOnWorkspacesCreateManyWorkspaceInput {
  assignedAt: DateTime
  userId: String!
}

input UsersOnWorkspacesCreateManyWorkspaceInputEnvelope {
  data: [UsersOnWorkspacesCreateManyWorkspaceInput!]!
  skipDuplicates: Boolean
}

input UsersOnWorkspacesCreateNestedManyWithoutUserInput {
  connect: [UsersOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [UsersOnWorkspacesCreateOrConnectWithoutUserInput!]
  create: [UsersOnWorkspacesCreateWithoutUserInput!]
  createMany: UsersOnWorkspacesCreateManyUserInputEnvelope
}

input UsersOnWorkspacesCreateNestedManyWithoutWorkspaceInput {
  connect: [UsersOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [UsersOnWorkspacesCreateOrConnectWithoutWorkspaceInput!]
  create: [UsersOnWorkspacesCreateWithoutWorkspaceInput!]
  createMany: UsersOnWorkspacesCreateManyWorkspaceInputEnvelope
}

input UsersOnWorkspacesCreateOrConnectWithoutUserInput {
  create: UsersOnWorkspacesCreateWithoutUserInput!
  where: UsersOnWorkspacesWhereUniqueInput!
}

input UsersOnWorkspacesCreateOrConnectWithoutWorkspaceInput {
  create: UsersOnWorkspacesCreateWithoutWorkspaceInput!
  where: UsersOnWorkspacesWhereUniqueInput!
}

input UsersOnWorkspacesCreateWithoutUserInput {
  assignedAt: DateTime
  workspace: WorkspaceCreateNestedOneWithoutAssignedUsersInput!
}

input UsersOnWorkspacesCreateWithoutWorkspaceInput {
  assignedAt: DateTime
  user: UserCreateNestedOneWithoutAssignedWorkspacesInput!
}

input UsersOnWorkspacesListRelationFilter {
  every: UsersOnWorkspacesWhereInput
  none: UsersOnWorkspacesWhereInput
  some: UsersOnWorkspacesWhereInput
}

type UsersOnWorkspacesMaxAggregate {
  assignedAt: DateTime
  userId: String
  workspaceId: String
}

type UsersOnWorkspacesMinAggregate {
  assignedAt: DateTime
  userId: String
  workspaceId: String
}

input UsersOnWorkspacesOrderByRelationAggregateInput {
  _count: SortOrder
}

input UsersOnWorkspacesScalarWhereInput {
  AND: [UsersOnWorkspacesScalarWhereInput!]
  NOT: [UsersOnWorkspacesScalarWhereInput!]
  OR: [UsersOnWorkspacesScalarWhereInput!]
  assignedAt: DateTimeNullableFilter
  userId: StringFilter
  workspaceId: StringFilter
}

input UsersOnWorkspacesUpdateManyMutationInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
}

input UsersOnWorkspacesUpdateManyWithWhereWithoutUserInput {
  data: UsersOnWorkspacesUpdateManyMutationInput!
  where: UsersOnWorkspacesScalarWhereInput!
}

input UsersOnWorkspacesUpdateManyWithWhereWithoutWorkspaceInput {
  data: UsersOnWorkspacesUpdateManyMutationInput!
  where: UsersOnWorkspacesScalarWhereInput!
}

input UsersOnWorkspacesUpdateManyWithoutUserNestedInput {
  connect: [UsersOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [UsersOnWorkspacesCreateOrConnectWithoutUserInput!]
  create: [UsersOnWorkspacesCreateWithoutUserInput!]
  createMany: UsersOnWorkspacesCreateManyUserInputEnvelope
  delete: [UsersOnWorkspacesWhereUniqueInput!]
  deleteMany: [UsersOnWorkspacesScalarWhereInput!]
  disconnect: [UsersOnWorkspacesWhereUniqueInput!]
  set: [UsersOnWorkspacesWhereUniqueInput!]
  update: [UsersOnWorkspacesUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UsersOnWorkspacesUpdateManyWithWhereWithoutUserInput!]
  upsert: [UsersOnWorkspacesUpsertWithWhereUniqueWithoutUserInput!]
}

input UsersOnWorkspacesUpdateManyWithoutWorkspaceNestedInput {
  connect: [UsersOnWorkspacesWhereUniqueInput!]
  connectOrCreate: [UsersOnWorkspacesCreateOrConnectWithoutWorkspaceInput!]
  create: [UsersOnWorkspacesCreateWithoutWorkspaceInput!]
  createMany: UsersOnWorkspacesCreateManyWorkspaceInputEnvelope
  delete: [UsersOnWorkspacesWhereUniqueInput!]
  deleteMany: [UsersOnWorkspacesScalarWhereInput!]
  disconnect: [UsersOnWorkspacesWhereUniqueInput!]
  set: [UsersOnWorkspacesWhereUniqueInput!]
  update: [UsersOnWorkspacesUpdateWithWhereUniqueWithoutWorkspaceInput!]
  updateMany: [UsersOnWorkspacesUpdateManyWithWhereWithoutWorkspaceInput!]
  upsert: [UsersOnWorkspacesUpsertWithWhereUniqueWithoutWorkspaceInput!]
}

input UsersOnWorkspacesUpdateWithWhereUniqueWithoutUserInput {
  data: UsersOnWorkspacesUpdateWithoutUserInput!
  where: UsersOnWorkspacesWhereUniqueInput!
}

input UsersOnWorkspacesUpdateWithWhereUniqueWithoutWorkspaceInput {
  data: UsersOnWorkspacesUpdateWithoutWorkspaceInput!
  where: UsersOnWorkspacesWhereUniqueInput!
}

input UsersOnWorkspacesUpdateWithoutUserInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
  workspace: WorkspaceUpdateOneRequiredWithoutAssignedUsersNestedInput
}

input UsersOnWorkspacesUpdateWithoutWorkspaceInput {
  assignedAt: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAssignedWorkspacesNestedInput
}

input UsersOnWorkspacesUpsertWithWhereUniqueWithoutUserInput {
  create: UsersOnWorkspacesCreateWithoutUserInput!
  update: UsersOnWorkspacesUpdateWithoutUserInput!
  where: UsersOnWorkspacesWhereUniqueInput!
}

input UsersOnWorkspacesUpsertWithWhereUniqueWithoutWorkspaceInput {
  create: UsersOnWorkspacesCreateWithoutWorkspaceInput!
  update: UsersOnWorkspacesUpdateWithoutWorkspaceInput!
  where: UsersOnWorkspacesWhereUniqueInput!
}

input UsersOnWorkspacesUserIdWorkspaceIdCompoundUniqueInput {
  userId: String!
  workspaceId: String!
}

input UsersOnWorkspacesWhereInput {
  AND: [UsersOnWorkspacesWhereInput!]
  NOT: [UsersOnWorkspacesWhereInput!]
  OR: [UsersOnWorkspacesWhereInput!]
  assignedAt: DateTimeNullableFilter
  user: UserRelationFilter
  userId: StringFilter
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

input UsersOnWorkspacesWhereUniqueInput {
  AND: [UsersOnWorkspacesWhereInput!]
  NOT: [UsersOnWorkspacesWhereInput!]
  OR: [UsersOnWorkspacesWhereInput!]
  assignedAt: DateTimeNullableFilter
  user: UserRelationFilter
  userId: StringFilter
  userId_workspaceId: UsersOnWorkspacesUserIdWorkspaceIdCompoundUniqueInput
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

type Workspace {
  _count: WorkspaceCount!
  aberration: String!
  actionsOnWorkspaces: [ActionsOnWorkspaces!]
  activeOnUser: [UserConfig!]
  assignedFlows: [FlowsOnWorkspaces!]
  assignedUsers: [UsersOnWorkspaces!]
  createdAt: DateTime
  createdBy: User!
  createdById: String!
  id: ID!
  name: String!
  profile: WorkspaceProfile
}

type WorkspaceCount {
  actionsOnWorkspaces: Int!
  activeOnUser: Int!
  assignedFlows: Int!
  assignedUsers: Int!
}

type WorkspaceCountAggregate {
  _all: Int!
  aberration: Int!
  createdAt: Int!
  createdById: Int!
  id: Int!
  name: Int!
}

input WorkspaceCreateInput {
  aberration: String!
  actionsOnWorkspaces: ActionsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  activeOnUser: UserConfigCreateNestedManyWithoutActiveWorkspaceInput
  assignedFlows: FlowsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  assignedUsers: UsersOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  createdAt: DateTime
  createdBy: UserCreateNestedOneWithoutCreatedWorkspacesInput!
  name: String!
  profile: WorkspaceProfileCreateNestedOneWithoutWorkspaceInput
}

input WorkspaceCreateManyCreatedByInput {
  aberration: String!
  createdAt: DateTime
  name: String!
}

input WorkspaceCreateManyCreatedByInputEnvelope {
  data: [WorkspaceCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input WorkspaceCreateNestedManyWithoutCreatedByInput {
  connect: [WorkspaceWhereUniqueInput!]
  connectOrCreate: [WorkspaceCreateOrConnectWithoutCreatedByInput!]
  create: [WorkspaceCreateWithoutCreatedByInput!]
  createMany: WorkspaceCreateManyCreatedByInputEnvelope
}

input WorkspaceCreateNestedOneWithoutActionsOnWorkspacesInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutActionsOnWorkspacesInput
  create: WorkspaceCreateWithoutActionsOnWorkspacesInput
}

input WorkspaceCreateNestedOneWithoutActiveOnUserInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutActiveOnUserInput
  create: WorkspaceCreateWithoutActiveOnUserInput
}

input WorkspaceCreateNestedOneWithoutAssignedFlowsInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutAssignedFlowsInput
  create: WorkspaceCreateWithoutAssignedFlowsInput
}

input WorkspaceCreateNestedOneWithoutAssignedUsersInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutAssignedUsersInput
  create: WorkspaceCreateWithoutAssignedUsersInput
}

input WorkspaceCreateOrConnectWithoutActionsOnWorkspacesInput {
  create: WorkspaceCreateWithoutActionsOnWorkspacesInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceCreateOrConnectWithoutActiveOnUserInput {
  create: WorkspaceCreateWithoutActiveOnUserInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceCreateOrConnectWithoutAssignedFlowsInput {
  create: WorkspaceCreateWithoutAssignedFlowsInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceCreateOrConnectWithoutAssignedUsersInput {
  create: WorkspaceCreateWithoutAssignedUsersInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceCreateOrConnectWithoutCreatedByInput {
  create: WorkspaceCreateWithoutCreatedByInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceCreateWithoutActionsOnWorkspacesInput {
  aberration: String!
  activeOnUser: UserConfigCreateNestedManyWithoutActiveWorkspaceInput
  assignedFlows: FlowsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  assignedUsers: UsersOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  createdAt: DateTime
  createdBy: UserCreateNestedOneWithoutCreatedWorkspacesInput!
  name: String!
  profile: WorkspaceProfileCreateNestedOneWithoutWorkspaceInput
}

input WorkspaceCreateWithoutActiveOnUserInput {
  aberration: String!
  actionsOnWorkspaces: ActionsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  assignedFlows: FlowsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  assignedUsers: UsersOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  createdAt: DateTime
  createdBy: UserCreateNestedOneWithoutCreatedWorkspacesInput!
  name: String!
  profile: WorkspaceProfileCreateNestedOneWithoutWorkspaceInput
}

input WorkspaceCreateWithoutAssignedFlowsInput {
  aberration: String!
  actionsOnWorkspaces: ActionsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  activeOnUser: UserConfigCreateNestedManyWithoutActiveWorkspaceInput
  assignedUsers: UsersOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  createdAt: DateTime
  createdBy: UserCreateNestedOneWithoutCreatedWorkspacesInput!
  name: String!
  profile: WorkspaceProfileCreateNestedOneWithoutWorkspaceInput
}

input WorkspaceCreateWithoutAssignedUsersInput {
  aberration: String!
  actionsOnWorkspaces: ActionsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  activeOnUser: UserConfigCreateNestedManyWithoutActiveWorkspaceInput
  assignedFlows: FlowsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  createdAt: DateTime
  createdBy: UserCreateNestedOneWithoutCreatedWorkspacesInput!
  name: String!
  profile: WorkspaceProfileCreateNestedOneWithoutWorkspaceInput
}

input WorkspaceCreateWithoutCreatedByInput {
  aberration: String!
  actionsOnWorkspaces: ActionsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  activeOnUser: UserConfigCreateNestedManyWithoutActiveWorkspaceInput
  assignedFlows: FlowsOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  assignedUsers: UsersOnWorkspacesCreateNestedManyWithoutWorkspaceInput
  createdAt: DateTime
  name: String!
  profile: WorkspaceProfileCreateNestedOneWithoutWorkspaceInput
}

input WorkspaceListRelationFilter {
  every: WorkspaceWhereInput
  none: WorkspaceWhereInput
  some: WorkspaceWhereInput
}

type WorkspaceMaxAggregate {
  aberration: String
  createdAt: DateTime
  createdById: String
  id: String
  name: String
}

type WorkspaceMinAggregate {
  aberration: String
  createdAt: DateTime
  createdById: String
  id: String
  name: String
}

input WorkspaceNullableRelationFilter {
  is: WorkspaceWhereInput
  isNot: WorkspaceWhereInput
}

input WorkspaceOrderByRelationAggregateInput {
  _count: SortOrder
}

input WorkspaceOrderByWithRelationInput {
  aberration: SortOrder
  actionsOnWorkspaces: ActionsOnWorkspacesOrderByRelationAggregateInput
  activeOnUser: UserConfigOrderByRelationAggregateInput
  assignedFlows: FlowsOnWorkspacesOrderByRelationAggregateInput
  assignedUsers: UsersOnWorkspacesOrderByRelationAggregateInput
  createdAt: SortOrderInput
  createdBy: UserOrderByWithRelationInput
  createdById: SortOrder
  id: SortOrder
  name: SortOrder
  profile: WorkspaceProfileOrderByWithRelationInput
}

type WorkspaceProfile {
  color: String
  createdAt: DateTime
  description: String
  icon: String
  id: ID!
  workspace: Workspace!
  workspaceId: String!
}

type WorkspaceProfileCountAggregate {
  _all: Int!
  color: Int!
  createdAt: Int!
  description: Int!
  icon: Int!
  id: Int!
  workspaceId: Int!
}

input WorkspaceProfileCreateNestedOneWithoutWorkspaceInput {
  connect: WorkspaceProfileWhereUniqueInput
  connectOrCreate: WorkspaceProfileCreateOrConnectWithoutWorkspaceInput
  create: WorkspaceProfileCreateWithoutWorkspaceInput
}

input WorkspaceProfileCreateOrConnectWithoutWorkspaceInput {
  create: WorkspaceProfileCreateWithoutWorkspaceInput!
  where: WorkspaceProfileWhereUniqueInput!
}

input WorkspaceProfileCreateWithoutWorkspaceInput {
  color: String
  createdAt: DateTime
  description: String
  icon: String
}

type WorkspaceProfileMaxAggregate {
  color: String
  createdAt: DateTime
  description: String
  icon: String
  id: String
  workspaceId: String
}

type WorkspaceProfileMinAggregate {
  color: String
  createdAt: DateTime
  description: String
  icon: String
  id: String
  workspaceId: String
}

input WorkspaceProfileNullableRelationFilter {
  is: WorkspaceProfileWhereInput
  isNot: WorkspaceProfileWhereInput
}

input WorkspaceProfileOrderByWithRelationInput {
  color: SortOrderInput
  createdAt: SortOrderInput
  description: SortOrderInput
  icon: SortOrderInput
  id: SortOrder
  workspace: WorkspaceOrderByWithRelationInput
  workspaceId: SortOrder
}

input WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput {
  connect: WorkspaceProfileWhereUniqueInput
  connectOrCreate: WorkspaceProfileCreateOrConnectWithoutWorkspaceInput
  create: WorkspaceProfileCreateWithoutWorkspaceInput
  delete: WorkspaceProfileWhereInput
  disconnect: WorkspaceProfileWhereInput
  update: WorkspaceProfileUpdateToOneWithWhereWithoutWorkspaceInput
  upsert: WorkspaceProfileUpsertWithoutWorkspaceInput
}

input WorkspaceProfileUpdateToOneWithWhereWithoutWorkspaceInput {
  data: WorkspaceProfileUpdateWithoutWorkspaceInput!
  where: WorkspaceProfileWhereInput
}

input WorkspaceProfileUpdateWithoutWorkspaceInput {
  color: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
}

input WorkspaceProfileUpsertWithoutWorkspaceInput {
  create: WorkspaceProfileCreateWithoutWorkspaceInput!
  update: WorkspaceProfileUpdateWithoutWorkspaceInput!
  where: WorkspaceProfileWhereInput
}

input WorkspaceProfileWhereInput {
  AND: [WorkspaceProfileWhereInput!]
  NOT: [WorkspaceProfileWhereInput!]
  OR: [WorkspaceProfileWhereInput!]
  color: StringNullableFilter
  createdAt: DateTimeNullableFilter
  description: StringNullableFilter
  icon: StringNullableFilter
  id: StringFilter
  workspace: WorkspaceRelationFilter
  workspaceId: StringFilter
}

input WorkspaceProfileWhereUniqueInput {
  AND: [WorkspaceProfileWhereInput!]
  NOT: [WorkspaceProfileWhereInput!]
  OR: [WorkspaceProfileWhereInput!]
  color: StringNullableFilter
  createdAt: DateTimeNullableFilter
  description: StringNullableFilter
  icon: StringNullableFilter
  id: String
  workspace: WorkspaceRelationFilter
  workspaceId: String
}

input WorkspaceRelationFilter {
  is: WorkspaceWhereInput
  isNot: WorkspaceWhereInput
}

enum WorkspaceScalarFieldEnum {
  aberration
  createdAt
  createdById
  id
  name
}

input WorkspaceScalarWhereInput {
  AND: [WorkspaceScalarWhereInput!]
  NOT: [WorkspaceScalarWhereInput!]
  OR: [WorkspaceScalarWhereInput!]
  aberration: StringFilter
  createdAt: DateTimeNullableFilter
  createdById: StringFilter
  id: StringFilter
  name: StringFilter
}

input WorkspaceUpdateInput {
  aberration: StringFieldUpdateOperationsInput
  actionsOnWorkspaces: ActionsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  activeOnUser: UserConfigUpdateManyWithoutActiveWorkspaceNestedInput
  assignedFlows: FlowsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  assignedUsers: UsersOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedWorkspacesNestedInput
  name: StringFieldUpdateOperationsInput
  profile: WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput
}

input WorkspaceUpdateManyMutationInput {
  aberration: StringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input WorkspaceUpdateManyWithWhereWithoutCreatedByInput {
  data: WorkspaceUpdateManyMutationInput!
  where: WorkspaceScalarWhereInput!
}

input WorkspaceUpdateManyWithoutCreatedByNestedInput {
  connect: [WorkspaceWhereUniqueInput!]
  connectOrCreate: [WorkspaceCreateOrConnectWithoutCreatedByInput!]
  create: [WorkspaceCreateWithoutCreatedByInput!]
  createMany: WorkspaceCreateManyCreatedByInputEnvelope
  delete: [WorkspaceWhereUniqueInput!]
  deleteMany: [WorkspaceScalarWhereInput!]
  disconnect: [WorkspaceWhereUniqueInput!]
  set: [WorkspaceWhereUniqueInput!]
  update: [WorkspaceUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [WorkspaceUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [WorkspaceUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input WorkspaceUpdateOneRequiredWithoutActionsOnWorkspacesNestedInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutActionsOnWorkspacesInput
  create: WorkspaceCreateWithoutActionsOnWorkspacesInput
  update: WorkspaceUpdateToOneWithWhereWithoutActionsOnWorkspacesInput
  upsert: WorkspaceUpsertWithoutActionsOnWorkspacesInput
}

input WorkspaceUpdateOneRequiredWithoutAssignedFlowsNestedInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutAssignedFlowsInput
  create: WorkspaceCreateWithoutAssignedFlowsInput
  update: WorkspaceUpdateToOneWithWhereWithoutAssignedFlowsInput
  upsert: WorkspaceUpsertWithoutAssignedFlowsInput
}

input WorkspaceUpdateOneRequiredWithoutAssignedUsersNestedInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutAssignedUsersInput
  create: WorkspaceCreateWithoutAssignedUsersInput
  update: WorkspaceUpdateToOneWithWhereWithoutAssignedUsersInput
  upsert: WorkspaceUpsertWithoutAssignedUsersInput
}

input WorkspaceUpdateOneWithoutActiveOnUserNestedInput {
  connect: WorkspaceWhereUniqueInput
  connectOrCreate: WorkspaceCreateOrConnectWithoutActiveOnUserInput
  create: WorkspaceCreateWithoutActiveOnUserInput
  delete: WorkspaceWhereInput
  disconnect: WorkspaceWhereInput
  update: WorkspaceUpdateToOneWithWhereWithoutActiveOnUserInput
  upsert: WorkspaceUpsertWithoutActiveOnUserInput
}

input WorkspaceUpdateToOneWithWhereWithoutActionsOnWorkspacesInput {
  data: WorkspaceUpdateWithoutActionsOnWorkspacesInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpdateToOneWithWhereWithoutActiveOnUserInput {
  data: WorkspaceUpdateWithoutActiveOnUserInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpdateToOneWithWhereWithoutAssignedFlowsInput {
  data: WorkspaceUpdateWithoutAssignedFlowsInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpdateToOneWithWhereWithoutAssignedUsersInput {
  data: WorkspaceUpdateWithoutAssignedUsersInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpdateWithWhereUniqueWithoutCreatedByInput {
  data: WorkspaceUpdateWithoutCreatedByInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceUpdateWithoutActionsOnWorkspacesInput {
  aberration: StringFieldUpdateOperationsInput
  activeOnUser: UserConfigUpdateManyWithoutActiveWorkspaceNestedInput
  assignedFlows: FlowsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  assignedUsers: UsersOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedWorkspacesNestedInput
  name: StringFieldUpdateOperationsInput
  profile: WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput
}

input WorkspaceUpdateWithoutActiveOnUserInput {
  aberration: StringFieldUpdateOperationsInput
  actionsOnWorkspaces: ActionsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  assignedFlows: FlowsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  assignedUsers: UsersOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedWorkspacesNestedInput
  name: StringFieldUpdateOperationsInput
  profile: WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput
}

input WorkspaceUpdateWithoutAssignedFlowsInput {
  aberration: StringFieldUpdateOperationsInput
  actionsOnWorkspaces: ActionsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  activeOnUser: UserConfigUpdateManyWithoutActiveWorkspaceNestedInput
  assignedUsers: UsersOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedWorkspacesNestedInput
  name: StringFieldUpdateOperationsInput
  profile: WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput
}

input WorkspaceUpdateWithoutAssignedUsersInput {
  aberration: StringFieldUpdateOperationsInput
  actionsOnWorkspaces: ActionsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  activeOnUser: UserConfigUpdateManyWithoutActiveWorkspaceNestedInput
  assignedFlows: FlowsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedWorkspacesNestedInput
  name: StringFieldUpdateOperationsInput
  profile: WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput
}

input WorkspaceUpdateWithoutCreatedByInput {
  aberration: StringFieldUpdateOperationsInput
  actionsOnWorkspaces: ActionsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  activeOnUser: UserConfigUpdateManyWithoutActiveWorkspaceNestedInput
  assignedFlows: FlowsOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  assignedUsers: UsersOnWorkspacesUpdateManyWithoutWorkspaceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profile: WorkspaceProfileUpdateOneWithoutWorkspaceNestedInput
}

input WorkspaceUpsertWithWhereUniqueWithoutCreatedByInput {
  create: WorkspaceCreateWithoutCreatedByInput!
  update: WorkspaceUpdateWithoutCreatedByInput!
  where: WorkspaceWhereUniqueInput!
}

input WorkspaceUpsertWithoutActionsOnWorkspacesInput {
  create: WorkspaceCreateWithoutActionsOnWorkspacesInput!
  update: WorkspaceUpdateWithoutActionsOnWorkspacesInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpsertWithoutActiveOnUserInput {
  create: WorkspaceCreateWithoutActiveOnUserInput!
  update: WorkspaceUpdateWithoutActiveOnUserInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpsertWithoutAssignedFlowsInput {
  create: WorkspaceCreateWithoutAssignedFlowsInput!
  update: WorkspaceUpdateWithoutAssignedFlowsInput!
  where: WorkspaceWhereInput
}

input WorkspaceUpsertWithoutAssignedUsersInput {
  create: WorkspaceCreateWithoutAssignedUsersInput!
  update: WorkspaceUpdateWithoutAssignedUsersInput!
  where: WorkspaceWhereInput
}

input WorkspaceWhereInput {
  AND: [WorkspaceWhereInput!]
  NOT: [WorkspaceWhereInput!]
  OR: [WorkspaceWhereInput!]
  aberration: StringFilter
  actionsOnWorkspaces: ActionsOnWorkspacesListRelationFilter
  activeOnUser: UserConfigListRelationFilter
  assignedFlows: FlowsOnWorkspacesListRelationFilter
  assignedUsers: UsersOnWorkspacesListRelationFilter
  createdAt: DateTimeNullableFilter
  createdBy: UserRelationFilter
  createdById: StringFilter
  id: StringFilter
  name: StringFilter
  profile: WorkspaceProfileNullableRelationFilter
}

input WorkspaceWhereUniqueInput {
  AND: [WorkspaceWhereInput!]
  NOT: [WorkspaceWhereInput!]
  OR: [WorkspaceWhereInput!]
  aberration: String
  actionsOnWorkspaces: ActionsOnWorkspacesListRelationFilter
  activeOnUser: UserConfigListRelationFilter
  assignedFlows: FlowsOnWorkspacesListRelationFilter
  assignedUsers: UsersOnWorkspacesListRelationFilter
  createdAt: DateTimeNullableFilter
  createdBy: UserRelationFilter
  createdById: StringFilter
  id: String
  name: String
  profile: WorkspaceProfileNullableRelationFilter
}